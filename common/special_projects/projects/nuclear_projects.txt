sp_nuclear_reactor = {
	specialization = specialization_nuclear
	icon = GFX_sp_nuclear_reactor
	complexity = sp_complexity.insane

	project_tags = sp_tag_nuclear_power

	allowed = {

	}
	available = {
		FROM = { has_tech = atomic_research }
	}

	breakthrough_cost = {
		specialization_nuclear = 0
	}

	resource_cost = {
		resources = { steel=20 tungsten=10 chromium=15 coal=150 }
	}

	prototype_time = sp_time.prototype.medium

	project_output = {
		country_effects = {
			custom_override_tooltip = {
				tooltip = {
					localization_key = SP_UNLOCK_BUILDING_ICON_DESC
					BUILDING = nuclear_reactor
					BUILDING_DESCRIPTION = nuclear_reactor_desc
					ICON_FRAME = 13
				}
				if = {
					limit = {
						has_country_flag = nuclear_reactor_heavy_water_flag
					}
					set_technology = {
						nuclear_reactor_heavy_water = 1
						popup = no
					}
				}
				else = {
					set_technology = {
						nuclear_reactor = 1
						popup = no
					}
				}
			}
			hidden_effect = {
				if = {
					limit = {
						has_dynamic_modifier = { modifier = sp_cost }
					}
				}
				remove_dynamic_modifier = { modifier = sp_cost }
			}
		}
		facility_state_effects = {
			# Determine how many reactors to build
			# Uranium factors
			OWNER = { calculate_available_uranium = yes }
			if = {
				limit = {
					OWNER = {
						has_country_flag = enough_controlled_uranium
					}
				}
				add_to_temp_variable = { tmp_num_reactors = 2 }
			}
			else_if = {
				limit = {
					OWNER = {
						has_country_flag = enough_total_uranium
					}
				}
				add_to_temp_variable = { tmp_num_reactors = 1 }
			}
			# Isotope separation factors
			if = {
				limit = {
					OWNER = {
						has_country_flag = sp_nuclear_isotope_separation_choice_reward_all
					}
				}
				add_to_temp_variable = { tmp_num_reactors = 2 }
			}
			else_if = {
				limit = {
					OWNER = {
						has_country_flag = sp_nuclear_isotope_separation_choice_reward_diffusion
					}
				}
				add_to_temp_variable = { tmp_num_reactors = 1 }
			}
			# Heavy water factors
			OWNER = { calculate_available_heavy_water = yes }
			if = {
				limit = {
					OWNER = {
						has_country_flag = nuclear_reactor_heavy_water_flag
						has_country_flag = enough_heavy_water
					}
				}
				add_to_temp_variable = { tmp_num_reactors = 1 }
			}
			# Reactor type factors
			if = {
				limit = {
					OWNER = {
						has_country_flag = sp_nuclear_reactor_choice_reward_all
					}
				}
				add_to_temp_variable = { tmp_num_reactors = 1 }
			}
			# Covered by following tooltip
			hidden_effect = {
				# Always build first reactor in same state as facility
				add_extra_state_shared_building_slots = 1
				meta_effect = {
					text = {
						set_building_level = {
							type = nuclear_[REACTOR_TYPE_M]
							level = 1
						}
					}
					REACTOR_TYPE_M = "[GetReactorType]"
				}
			}
			add_to_temp_variable = { tmp_num_reactors = -1 } # Account for that reactor built
			clamp_temp_variable = { var = tmp_num_reactors min = 0 }
			custom_effect_tooltip = sp_nuclear_reactor_facility_state_effects_tt

			# USA Unique reactor locations
			if = {
				limit = {
					OWNER = { tag = USA }
				}
				OWNER = {
					for_loop_effect = {
						end = tmp_num_reactors
						compare = less_than_or_equals

						random_core_state = {
							prioritize = { 820 368 386 } # Met Lab, Oak Ridge, Hanford
							limit = {
								nuclear_reactor < 1
								nuclear_reactor_heavy_water < 1
							}
							add_extra_state_shared_building_slots = 1
							meta_effect = {
								text = {
									set_building_level = {
										type = nuclear_[REACTOR_TYPE_M]
										level = 1
									}
								}
								REACTOR_TYPE_M = "[GetReactorType]"
							}
						}
					}
				}
			}
			# Generic reactor locations
			else = {
				OWNER = {
					for_loop_effect = {
						end = tmp_num_reactors
						compare = less_than_or_equals

						random_core_state = {
							limit = {
								nuclear_reactor < 1
								nuclear_reactor_heavy_water < 1
								is_coastal = no
								# TODO
								# OR = {
								# 	has_state_category = megalopolis
								# 	has_state_category = large_metropolis
								# 	has_state_category = metropolis
								# 	has_state_category = large_city
								# 	has_state_category = city
								# }
							}
							add_extra_state_shared_building_slots = 1
							meta_effect = {
								text = {
									set_building_level = {
										type = nuclear_[REACTOR_TYPE_M]
										level = 1
									}
								}
								REACTOR_TYPE_M = "[GetReactorType]"
							}
						}
					}
				}
			}
		}
	}

	generic_prototype_rewards = {
		sp_nuclear_scientist_xp_generic_reward
		sp_nuclear_minor_progress_generic_reward
		sp_nuclear_generic_electronics_tech_reward
		sp_nuclear_generic_industry_tech_reward
		sp_nuclear_minor_security_generic_reward
		sp_nuclear_major_security_generic_reward
		sp_nuclear_reactor_radioactive_leak_stabilized_reward
		sp_nuclear_reactor_minor_explosion_reward
		sp_nuclear_reactor_graphite_purity_error_reward
		sp_nuclear_reactor_dupont_reward
	}

	unique_prototype_rewards = {
		sp_nuclear_security_choice_reward = {
			fire_only_once = yes

			threshold = {
				min = 0
				max = 15
			}

			weight = {
				base = 1000
			}

			option = {
				token = sp_nuclear_security_choice_reward_high

				iteration_output = {
					country_effects = {
						FROM = {
							add_project_progress_ratio = constant:sp_progress.gain.low
							set_project_flag = sp_nuclear_security_choice_reward_high
						}
						custom_effect_tooltip = sp_nuclear_security_choice_reward_high_tt
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_PP
								AMOUNT = 0.25
							}
							if = {
								limit = {
									NOT = {
										has_dynamic_modifier = { modifier = sp_cost }
									}
								}
								add_dynamic_modifier = {
									modifier = sp_cost
								}
							}
							add_to_variable = { sp_cost_political_power_cost = 0.25 }
						}
					}
				}
			}

			option = {
				token = sp_nuclear_security_choice_reward_low

				iteration_output = {
					country_effects = {
						FROM = {
							add_project_progress_ratio = constant:sp_progress.gain.high
						}
						custom_effect_tooltip = sp_nuclear_security_choice_reward_low_tt
						hidden_effect = {
							if = {
								limit = {
									NOT = {
										has_dynamic_modifier = { modifier = sp_cost }
									}
								}
								add_dynamic_modifier = {
									modifier = sp_cost
								}
							}
						}
					}
				}
			}
		}

		sp_nuclear_supply_choice_reward = {
			fire_only_once = yes

			threshold = {
				min = 15
				max = 30
			}

			weight = {
				base = 1000
			}

			option = {
				token = sp_nuclear_supply_choice_reward_option

				iteration_output = {
					country_effects = {
						calculate_available_uranium = yes
						if = {
							limit = {
								has_country_flag = enough_controlled_uranium
							}
							FROM = { add_project_progress_ratio = constant:sp_progress.gain_controlled_u.medium }
							custom_effect_tooltip = sp_nuclear_supply_choice_reward_option_controlled_tt
						}
						else_if = {
							limit = {
								has_country_flag = enough_total_uranium
							}
							FROM = { add_project_progress_ratio = constant:sp_progress.gain.medium }
							custom_effect_tooltip = sp_nuclear_supply_choice_reward_option_allied_tt
						}
						else = {
							FROM = { add_project_progress_ratio = constant:sp_progress.gain_lacking_u.medium }
							custom_effect_tooltip = sp_nuclear_supply_choice_reward_option_lacking_tt
						}
					}
				}
			}
		}

		sp_nuclear_isotope_separation_choice_reward = {
			fire_only_once = yes

			threshold = {
				min = 30
				max = 45
			}

			weight = {
				base = 1000
			}

			option = {
				token = sp_nuclear_isotope_separation_choice_reward_diffusion

				iteration_output = {
					country_effects = {
						sp_nuclear_progress_medium = yes
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_RESOURCE
								RESOURCE = coal
								AMOUNT = 300
								ICON_FRAME = 7
							}
							add_to_variable = { sp_cost_country_resource_cost_coal = 300 }
						}
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_RESOURCE
								RESOURCE = rubber
								AMOUNT = 15
								ICON_FRAME = 3
							}
							add_to_variable = { sp_cost_country_resource_cost_rubber = 15 }
						}
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_CIV
								AMOUNT = 15
							}
							add_to_variable = { sp_cost_civilian_factory_use = 15 }
						}
						set_country_flag = sp_nuclear_isotope_separation_choice_reward_diffusion
					}
				}
			}

			option = {
				token = sp_nuclear_isotope_separation_choice_reward_electromagnetic

				iteration_output = {
					country_effects = {
						sp_nuclear_progress_medium = yes
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_RESOURCE
								RESOURCE = chromium
								AMOUNT = 25
								ICON_FRAME = 6
							}
							add_to_variable = { sp_cost_country_resource_cost_chromium = 25 }
						}
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_CIV
								AMOUNT = 5
							}
							add_to_variable = { sp_cost_civilian_factory_use = 5 }
						}
					}
				}
			}

			option = {
				token = sp_nuclear_isotope_separation_choice_reward_centrifugal

				iteration_output = {
					country_effects = {
						sp_nuclear_progress_low = yes
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_RESOURCE
								RESOURCE = coal
								AMOUNT = 100
								ICON_FRAME = 7
							}
							add_to_variable = { sp_cost_country_resource_cost_coal = 100 }
						}
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_RESOURCE
								RESOURCE = steel
								AMOUNT = 15
								ICON_FRAME = 5
							}
							add_to_variable = { sp_cost_country_resource_cost_steel = 15 }
						}
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_CIV
								AMOUNT = 5
							}
							add_to_variable = { sp_cost_civilian_factory_use = 5 }
						}
					}
				}
			}

			option = {
				token = sp_nuclear_isotope_separation_choice_reward_all

				iteration_output = {
					country_effects = {
						sp_nuclear_progress_high = yes
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_RESOURCE
								RESOURCE = coal
								AMOUNT = 400
								ICON_FRAME = 7
							}
							add_to_variable = { sp_cost_country_resource_cost_coal = 300 }
						}
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_RESOURCE
								RESOURCE = chromium
								AMOUNT = 25
								ICON_FRAME = 6
							}
							add_to_variable = { sp_cost_country_resource_cost_chromium = 25 }
						}
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_RESOURCE
								RESOURCE = rubber
								AMOUNT = 15
								ICON_FRAME = 3
							}
							add_to_variable = { sp_cost_country_resource_cost_rubber = 15 }
						}
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_RESOURCE
								RESOURCE = steel
								AMOUNT = 15
								ICON_FRAME = 5
							}
							add_to_variable = { sp_cost_country_resource_cost_steel = 15 }
						}
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_CIV
								AMOUNT = 25
							}
							add_to_variable = { sp_cost_civilian_factory_use = 25 }
						}
						custom_effect_tooltip = sp_nuclear_reactor_extra_reactor_tt
						set_country_flag = sp_nuclear_isotope_separation_choice_reward_all
					}
				}
			}
		}

		sp_nuclear_design_choice_reward = {
			fire_only_once = yes

			threshold = {
				min = 45
				max = 60
			}

			weight = {
				base = 1000
			}

			option = {
				token = sp_nuclear_design_choice_reward_graphite

				iteration_output = {
					country_effects = {
						sp_nuclear_progress_medium = yes
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_CIV
								AMOUNT = 10
							}
							add_to_variable = { sp_cost_civilian_factory_use = 10 }
						}
						custom_effect_tooltip = {
							localization_key = SP_UNLOCK_BUILDING
							BUILDING = nuclear_reactor
						}
						set_country_flag = nuclear_reactor_graphite_flag
					}
				}
			}

			option = {
				token = sp_nuclear_design_choice_reward_heavy_water

				iteration_output = {
					country_effects = {
						calculate_available_heavy_water = yes
						if = {
							limit = {
								has_country_flag = enough_heavy_water
							}
							sp_nuclear_progress_medium = yes
						}
						else = {
							sp_nuclear_progress_low = yes
							custom_effect_tooltip = sp_nuclear_lacking_heavy_water_tt
						}
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_CIV
								AMOUNT = 5
							}
							add_to_variable = { sp_cost_civilian_factory_use = 5 }
						}
						custom_effect_tooltip = {
							localization_key = SP_UNLOCK_BUILDING
							BUILDING = nuclear_reactor_heavy_water
						}
						set_country_flag = nuclear_reactor_heavy_water_flag
					}
				}
			}
		}

		sp_nuclear_reactor_tested_reward = {
			fire_only_once = yes

			threshold = {
				min = 60
				max = 75
			}

			weight = {
				base = 1000
			}

			option = {
				token = nuclear_reactor_tested_reward_classify
				iteration_output = {
					country_effects = {
						set_global_flag = nuclear_reactor_tested_flag
						set_country_flag = nuclear_reactor_classify_flag
					}
				}
			}

			option = {
				token = sp_nuclear_reactor_tested_reward_public

				iteration_output = {
					scientist_effects = {
						if = {
							limit = {
								NOT = { has_trait = scientist_trait_nuclear_power_expert }
							}
							add_scientist_trait = scientist_trait_nuclear_power_expert
						}
						else = {
							if = {
								limit = {
									FROM = { has_project_flag = sp_nuclear_security_choice_reward_high }
								}
								add_scientist_xp = {
									experience = constant:sp_scientist_xp.gain_high_security.medium
									specialization = specialization_nuclear
								}
								custom_effect_tooltip = sp_nuclear_security_high_tt
							}
							else = {
								add_scientist_xp = {
									experience = constant:sp_scientist_xp.gain.medium
									specialization = specialization_nuclear
								}
								custom_effect_tooltip = sp_nuclear_security_low_tt
							}
						}
					}
					country_effects = {
						# More foreign bonuses for lower security
						if = {
							limit = {
								FROM = {
									has_project_flag = sp_nuclear_security_choice_reward_high
								}
							}
							set_temp_variable = { tmp_progress = 0.05 }
							set_temp_variable = { tmp_bonus = 0.1 }
							custom_effect_tooltip = sp_nuclear_security_high_bonus_tt
						}
						else = {
							set_temp_variable = { tmp_progress = 0.1 }
							set_temp_variable = { tmp_bonus = 0.2 }
							custom_effect_tooltip = sp_nuclear_security_low_bonus_tt
						}
						add_popularity = {
							ideology = ROOT
							popularity = 0.05
						}
						add_political_power = 100
						add_war_support = 0.05
						every_enemy_country = {
							add_war_support = -0.025
						}
						every_other_country = {
							limit = {
								is_in_faction_with = ROOT
							}
							add_war_support = 0.025
						}
						# Only happens on the first world-wide reactor test
						if = {
							limit = {
								NOT = { has_global_flag = nuclear_reactor_tested_flag }
							}
							set_global_flag = nuclear_reactor_tested_flag
							set_country_flag = nuclear_reactor_public_flag
							every_other_country = {
								limit = {
									OR = {
										is_major = yes
										is_special_project_being_researched = sp:sp_nuclear_reactor
									}
								}
								custom_effect_tooltip = sp_nuclear_reactor_tested_reward_public_tt
								hidden_effect = {
									if = {
										limit = {
											has_tech = atomic_research
											NOT = { is_special_project_completed = sp:sp_nuclear_reactor }
										}
										sp:sp_nuclear_reactor = { add_project_progress_ratio = tmp_progress }
									}
									else_if = {
										limit = {
											NOT = {
												has_tech = atomic_research
											}
										}
										meta_effect = {
											text = {
												add_tech_bonus = {
													name = sp_nuclear_reactor_tested_tech_bonus
													bonus = [TMP_BONUS_M]
													uses = 1
													technology  = atomic_research
												}
											}
											TMP_BONUS_M = "[?tmp_bonus]"
										}
									}
								}
							}
						}
					}
				}
			}
		}

		sp_nuclear_reactor_choice_reward = {
			fire_only_once = yes

			threshold = {
				min = 75
				max = 100
			}

			weight = {
				base = 1000.0
			}

			option = {
				token = sp_nuclear_reactor_choice_reward_uranium

				iteration_output = {
					country_effects = {
						sp_nuclear_progress_medium = yes
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_CIV
								AMOUNT = 5
							}
							add_to_variable = { sp_cost_civilian_factory_use = 5 }
						}
						set_country_flag = sp_nuclear_reactor_choice_reward_uranium
					}
				}
			}

			option = {
				token = sp_nuclear_reactor_choice_reward_plutonium

				iteration_output = {
					country_effects = {
						sp_nuclear_progress_low = yes
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_CIV
								AMOUNT = 10
							}
							add_to_variable = { sp_cost_civilian_factory_use = 10 }
						}
						set_country_flag = sp_nuclear_reactor_choice_reward_plutonium
					}
				}
			}

			option = {
				token = sp_nuclear_reactor_choice_reward_all

				iteration_output = {
					country_effects = {
						sp_nuclear_progress_high = yes
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_CIV
								AMOUNT = 15
							}
							add_to_variable = { sp_cost_civilian_factory_use = 15 }
						}
						custom_effect_tooltip = sp_nuclear_reactor_extra_reactor_tt
						set_country_flag = sp_nuclear_reactor_choice_reward_all
					}
				}
			}
		}
	}
}

# ATOMIC BOMBS
sp_nuclear_bomb = {
	specialization = specialization_nuclear
	icon = GFX_sp_nuclear_bomb
	complexity = sp_complexity.insane

	project_tags = sp_tag_nuclear_warfare

	allowed = {

	}
	available = {

	}
	special_project_parent = {
		sp_nuclear_reactor
	}

	breakthrough_cost = {
		specialization_nuclear = 0
	}

	resource_cost = {
		resources = { steel=30 tungsten=15 chromium=30 coal=100 }
	}

	prototype_time = sp_time.prototype.medium

	project_output = {
		country_effects = {
			custom_effect_tooltip = sp_nuclear_bomb_tt
			hidden_effect = {
				set_technology = {
					nukes = 1
					popup = no
				}
				if = {
					limit = {
						has_dynamic_modifier = { modifier = sp_cost }
					}
				}
				remove_dynamic_modifier = { modifier = sp_cost }
			}
			# Determine how many atomic bombs to build
			# Uranium factors - ahistorically quick
			calculate_available_uranium = yes
			if = {
				limit = {
					has_country_flag = enough_controlled_uranium
				}
				add_to_temp_variable = { tmp_num_bombs = 1 }
			}
			# SP:Reactor isotope separation factors
			if = {
				limit = {
					has_country_flag = sp_nuclear_isotope_separation_choice_reward_all
				}
				add_to_temp_variable = { tmp_num_bombs = 1 }
			}
			# SP:Reactor reactor factors
			if = {
				limit = {
					has_country_flag = sp_nuclear_reactor_choice_reward_all
				}
				add_to_temp_variable = { tmp_num_bombs = 1 }
			}
			# Trigger factors
			if = {
				limit = {
					has_country_flag = sp_nuclear_bomb_trigger_both
				}
				add_to_temp_variable = { tmp_num_bombs = 1 }
			}
			# Initiator factors
			if = {
				limit = {
					has_country_flag = sp_nuclear_bomb_initiator_both
				}
				add_to_temp_variable = { tmp_num_bombs = 1 }
			}
			# Bomb test factors
			if = {
				limit = {
					NOT = { has_country_flag = sp_nuclear_bomb_no_test }
				}
				add_to_temp_variable = { tmp_num_bombs = -1 }
			}
			clamp_temp_variable = { var = tmp_num_bombs min = 1 }
			custom_effect_tooltip = sp_nuclear_bomb_country_effects_tt
			hidden_effect = {
				add_nuclear_bombs = tmp_num_bombs
			}
		}

		scientist_effects = { #The limit to only apply the effect if is_character = USA_robert_oppenheimer throws error and doesn't work.
			set_character_flag = USA_oppenheimer_made_the_nuke_flag
		}

	}

	generic_prototype_rewards = {
		sp_nuclear_scientist_xp_generic_reward
		sp_nuclear_minor_progress_generic_reward
		sp_nuclear_generic_electronics_tech_reward
		sp_nuclear_generic_industry_tech_reward
		sp_nuclear_minor_security_generic_reward
		sp_nuclear_major_security_generic_reward
		sp_nuclear_bomb_critical_mass_generic_reward
		sp_nuclear_bomb_accident_generic_reward
		# sp_nuclear_war_support_generic_reward
		# sp_nuclear_major_political_interference_generic_reward
		# sp_nuclear_bomb_theoretical_breakthrough_generic_reward
	}

	unique_prototype_rewards = {
		sp_nuclear_security_choice_reward = {
			fire_only_once = yes

			threshold = {
				min = 0
				max = 15
			}

			weight = {
				base = 1000
			}

			option = {
				token = sp_nuclear_security_choice_reward_high

				iteration_output = {
					country_effects = {
						FROM = {
							add_project_progress_ratio = constant:sp_progress.gain.low
							set_project_flag = sp_nuclear_security_choice_reward_high
						}
						custom_effect_tooltip = sp_nuclear_security_choice_reward_high_tt
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_PP
								AMOUNT = 0.25
							}
							if = {
								limit = {
									NOT = {
										has_dynamic_modifier = { modifier = sp_cost }
									}
								}
								add_dynamic_modifier = {
									modifier = sp_cost
								}
							}
							add_to_variable = { sp_cost_political_power_cost = 0.25 }
						}
					}
				}
			}

			option = {
				token = sp_nuclear_security_choice_reward_low

				iteration_output = {
					country_effects = {
						FROM = {
							add_project_progress_ratio = constant:sp_progress.gain.high
						}
						custom_effect_tooltip = sp_nuclear_security_choice_reward_low_tt
						hidden_effect = {
							if = {
								limit = {
									NOT = {
										has_dynamic_modifier = { modifier = sp_cost }
									}
								}
								add_dynamic_modifier = {
									modifier = sp_cost
								}
							}
						}
					}
				}
			}
		}

		sp_nuclear_supply_choice_reward = {
			fire_only_once = yes

			threshold = {
				min = 15
				max = 30
			}

			weight = {
				base = 1000
			}

			option = {
				token = sp_nuclear_supply_choice_reward_option

				iteration_output = {
					country_effects = {
						calculate_available_uranium = yes
						if = {
							limit = {
								has_country_flag = enough_controlled_uranium
							}
							FROM = { add_project_progress_ratio = constant:sp_progress.gain_controlled_u.medium }
							custom_effect_tooltip = sp_nuclear_supply_choice_reward_option_controlled_tt
						}
						else_if = {
							limit = {
								has_country_flag = enough_total_uranium
							}
							FROM = { add_project_progress_ratio = constant:sp_progress.gain.medium }
							custom_effect_tooltip = sp_nuclear_supply_choice_reward_option_allied_tt
						}
						else = {
							FROM = { add_project_progress_ratio = constant:sp_progress.gain_lacking_u.medium }
							custom_effect_tooltip = sp_nuclear_supply_choice_reward_option_lacking_tt
						}
					}
				}
			}
		}

		sp_nuclear_bomb_trigger_choice_reward = {
			fire_only_once = yes

			threshold = {
				min = 30
				max = 45
			}

			weight = {
				base = 1000
			}

			option = {
				token = sp_nuclear_bomb_trigger_choice_reward_gun_type

				iteration_output = {
					country_effects = {
						if = {
							limit = {
								has_country_flag = sp_nuclear_reactor_choice_reward_uranium
							}
							sp_nuclear_progress_medium = yes
						}
						else = {
							sp_nuclear_progress_low = yes
						}
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_CIV
								AMOUNT = 5
							}
							add_to_variable = { sp_cost_civilian_factory_use = 5 }
						}
						set_country_flag = sp_nuclear_bomb_trigger_gun
					}
				}
			}

			option = {
				token = sp_nuclear_bomb_trigger_choice_reward_implosion

				iteration_output = {
					country_effects = {
						if = {
							limit = {
								has_country_flag = sp_nuclear_reactor_choice_reward_plutonium
							}
							sp_nuclear_progress_medium = yes
						}
						else = {
							sp_nuclear_progress_low = yes
						}
						sp_nuclear_progress_low = yes
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_CIV
								AMOUNT = 10
							}
							add_to_variable = { sp_cost_civilian_factory_use = 10 }
						}
						set_country_flag = sp_nuclear_bomb_trigger_implosion
					}
				}
			}

			option = {
				token = sp_nuclear_bomb_trigger_choice_reward_both

				iteration_output = {
					country_effects = {
						sp_nuclear_progress_high = yes
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_CIV
								AMOUNT = 15
							}
							add_to_variable = { sp_cost_civilian_factory_use = 15 }
						}
						custom_effect_tooltip = sp_nuclear_bomb_extra_bomb_tt
						set_country_flag = sp_nuclear_bomb_trigger_both
					}
				}
			}
		}

		sp_nuclear_bomb_initiator_choice_reward = {
			fire_only_once = yes

			threshold = {
				min = 45
				max = 60
			}

			weight = {
				base = 1000
			}

			option = {
				token = sp_nuclear_bomb_initiator_choice_reward_pile

				iteration_output = {
					country_effects = {
						if = {
							limit = {
								has_country_flag = sp_nuclear_reactor_choice_reward_all
							}
							sp_nuclear_progress_medium = yes
						}
						else = {
							sp_nuclear_progress_low = yes
							custom_effect_tooltip = sp_nuclear_bomb_initiator_choice_reward_pile_tt
						}
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_RESOURCE
								RESOURCE = chromium
								AMOUNT = 25
								ICON_FRAME = 6
							}
							add_to_variable = { sp_cost_country_resource_cost_chromium = 25 }
						}
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_CIV
								AMOUNT = 15
							}
							add_to_variable = { sp_cost_civilian_factory_use = 15 }
						}
						set_country_flag = sp_nuclear_bomb_initiator_pile
					}
				}
			}

			option = {
				token = sp_nuclear_bomb_initiator_choice_reward_lead

				iteration_output = {
					country_effects = {
						sp_nuclear_progress_low = yes
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_RESOURCE
								RESOURCE = steel
								AMOUNT = 15
								ICON_FRAME = 5
							}
							add_to_variable = { sp_cost_country_resource_cost_steel = 15 }
						}
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_CIV
								AMOUNT = 5
							}
							add_to_variable = { sp_cost_civilian_factory_use = 5 }
						}
						set_country_flag = sp_nuclear_bomb_initiator_lead
					}
				}
			}

			option = {
				token = sp_nuclear_bomb_initiator_choice_reward_both

				iteration_output = {
					country_effects = {
						sp_nuclear_progress_medium = yes
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_RESOURCE
								RESOURCE = chromium
								AMOUNT = 25
								ICON_FRAME = 6
							}
							add_to_variable = { sp_cost_country_resource_cost_chromium = 25 }
						}
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_RESOURCE
								RESOURCE = steel
								AMOUNT = 15
								ICON_FRAME = 5
							}
							add_to_variable = { sp_cost_country_resource_cost_steel = 15 }
						}
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_CIV
								AMOUNT = 20
							}
							add_to_variable = { sp_cost_civilian_factory_use = 20 }
						}
						custom_effect_tooltip = sp_nuclear_bomb_extra_bomb_tt
						set_country_flag = sp_nuclear_bomb_initiator_both
					}
				}
			}
		}

		sp_nuclear_bomb_fuze_choice_reward = {
			fire_only_once = yes

			threshold = {
				min = 60
				max = 75
			}

			weight = {
				base = 1000
			}

			option = {
				token = sp_nuclear_bomb_fuze_choice_reward_barometer

				iteration_output = {
					country_effects = {
						sp_nuclear_progress_low = yes
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_RESOURCE
								RESOURCE = chromium
								AMOUNT = 10
								ICON_FRAME = 6
							}
							add_to_variable = { sp_cost_country_resource_cost_chromium = 10 }
						}
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_CIV
								AMOUNT = 5
							}
							add_to_variable = { sp_cost_civilian_factory_use = 5 }
						}
						custom_effect_tooltip = sp_nuclear_bomb_dud_tt
					}
				}
			}

			option = {
				token = sp_nuclear_bomb_trigger_choice_reward_clock

				iteration_output = {
					country_effects = {
						sp_nuclear_progress_low = yes
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_CIV
								AMOUNT = 10
							}
							add_to_variable = { sp_cost_civilian_factory_use = 10 }
						}
						custom_effect_tooltip = sp_nuclear_bomb_dud_tt
					}
				}
			}

			option = { # TODO require radar project for progression
				token = sp_nuclear_bomb_trigger_choice_reward_radar

				iteration_output = {
					country_effects = {
						sp_nuclear_progress_low = yes
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_RESOURCE
								RESOURCE = chromium
								AMOUNT = 25
								ICON_FRAME = 6
							}
							add_to_variable = { sp_cost_country_resource_cost_chromium = 25 }
						}
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_CIV
								AMOUNT = 15
							}
							add_to_variable = { sp_cost_civilian_factory_use = 15 }
						}
						custom_effect_tooltip = sp_nuclear_bomb_dud_tt
					}
				}
			}

			option = {
				token = sp_nuclear_bomb_trigger_choice_reward_all

				iteration_output = {
					country_effects = {
						sp_nuclear_progress_medium = yes
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_RESOURCE
								RESOURCE = chromium
								AMOUNT = 35
								ICON_FRAME = 6
							}
							add_to_variable = { sp_cost_country_resource_cost_chromium = 35 }
						}
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_CIV
								AMOUNT = 30
							}
							add_to_variable = { sp_cost_civilian_factory_use = 30 }
						}
						custom_effect_tooltip = sp_nuclear_bomb_extra_bomb_tt
						set_country_flag = sp_nuclear_bomb_fuze_all
					}
				}
			}
		}

		sp_nuclear_bomb_test_prototype_reward = {
			fire_only_once = yes

			threshold = {
				min = 75
				max = 100
			}

			weight = {
				base = 1000
			}

			option = {
				token = sp_nuclear_bomb_test_prototype_reward_test_bomb

				iteration_output = {
					country_effects = {
						sp_nuclear_progress_medium = yes
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_RESOURCE
								RESOURCE = steel
								AMOUNT = 15
								ICON_FRAME = 5
							}
							add_to_variable = { sp_cost_country_resource_cost_steel = 15 }
						}
					}
				}
			}

			option = {
				token = sp_nuclear_bomb_test_prototype_reward_test_bomb_announcement

				iteration_output = {
					country_effects = {
						sp_nuclear_progress_medium = yes
						custom_override_tooltip = {
							tooltip = {
								localization_key = SP_COST_RESOURCE
								RESOURCE = steel
								AMOUNT = 15
								ICON_FRAME = 5
							}
							add_to_variable = { sp_cost_country_resource_cost_steel = 15 }
						}
						# More foreign bonuses for lower security
						if = {
							limit = {
								FROM = {
									has_project_flag = sp_nuclear_security_choice_reward_high
								}
							}
							set_temp_variable = { tmp_progress = 0.05 }
							set_temp_variable = { tmp_bonus = 0.15 }
							custom_effect_tooltip = sp_nuclear_security_high_bonus_tt
						}
						else = {
							set_temp_variable = { tmp_progress = 0.1 }
							set_temp_variable = { tmp_bonus = 0.25 }
							custom_effect_tooltip = sp_nuclear_security_low_bonus_tt
						}
						add_popularity = {
							ideology = ROOT
							popularity = 0.05
						}
						add_political_power = 150
						add_war_support = 0.075
						every_enemy_country = {
							add_war_support = -0.05
						}
						every_other_country = {
							limit = {
								is_in_faction_with = ROOT
							}
							add_war_support = 0.05
						}
						# Only happens on the first world-wide bomb test
						if = {
							limit = {
								NOT = { has_global_flag = nuclear_bomb_tested_flag }
							}
							set_global_flag = nuclear_bomb_tested_flag
							set_country_flag = nuclear_bomb_public_flag
							every_other_country = {
								limit = {
									OR = {
										is_major = yes
										is_special_project_being_researched = sp:sp_nuclear_bomb
									}
								}
								custom_effect_tooltip = sp_nuclear_reactor_tested_reward_public_tt
								hidden_effect = {
									if = {
										limit = {
											has_tech = atomic_research
											NOT = { is_special_project_completed = sp:sp_nuclear_bomb }
										}
										sp:sp_nuclear_bomb = { add_project_progress_ratio = tmp_progress }
									}
									else_if = {
										limit = {
											NOT = {
												has_tech = atomic_research
											}
										}
										meta_effect = {
											text = {
												add_tech_bonus = {
													name = sp_nuclear_bomb_tested_tech_bonus
													bonus = [TMP_BONUS_M]
													uses = 1
													technology  = atomic_research
												}
											}
											TMP_BONUS_M = "[?tmp_bonus]"
										}
									}
								}
							}
						}
					}
				}
			}

			option = {
				token = sp_nuclear_bomb_test_prototype_reward_keep_bomb

				iteration_output = {
					country_effects = {
						set_country_flag = sp_nuclear_bomb_no_test
						custom_effect_tooltip = sp_nuclear_bomb_test_prototype_reward_keep_bomb_tt
					}
				}
			}
		}

		# sp_nuclear_bomb_espionage_threats_reward = {
		# 	fire_only_once = yes

		# 	threshold = {
		# 		min = 0
		# 		max = 80
		# 	}

		# 	weight = {
		# 		base = 1
		# 		modifier = {
		# 			factor = 10
		# 			FROM = {
		# 				has_war = yes
		# 			}
		# 		}
		# 	}

		# 	option = {
		# 		token = sp_nuclear_bomb_espionage_threats_reward_no

		# 		iteration_output = {
		# 			country_effects = {
		# 				set_country_flag = nuclear_bomb_low_security_flag
		# 			}
		# 			scientist_effects = {
		# 				add_scientist_xp = {
		# 					experience = constant:sp_scientist_xp.gain.low
		# 					specialization = specialization_nuclear
		# 				}
		# 			}
		# 		}
		# 	}

		# 	option = {
		# 		token = sp_nuclear_bomb_espionage_threats_reward_increase_security

		# 		iteration_output = {
		# 			country_effects = {
		# 				set_country_flag = nuclear_bomb_high_security_flag
		# 				custom_effect_tooltip = sp_nuclear_bomb_espionage_threats_reward_increase_security_tt
		# 				FROM = { add_project_progress_ratio = constant:sp_progress.loss.low }
		# 			}
		# 		}
		# 	}
		# }

		# sp_nuclear_bomb_information_leak_reward = {
		# 	fire_only_once = yes

		# 	threshold = {
		# 		min = 30
		# 		max = 100
		# 	}

		# 	weight = {
		# 		base = 0.2
		# 		modifier = {
		# 			factor = 2
		# 			FROM = { has_country_flag = nuclear_reactor_public_flag }
		# 		}
		# 		modifier = {
		# 			factor = 0
		# 			FROM = { has_war = no }
		# 		}
		# 		modifier = {
		# 			factor = 5
		# 			FROM = { has_country_flag = nuclear_bomb_low_security_flag }
		# 		}
		# 		modifier = {
		# 			factor = 0.5
		# 			FROM = { has_country_flag = nuclear_bomb_high_security_flag }
		# 		}

		# 	}

		# 	option = {
		# 		token = sp_nuclear_bomb_information_leak_reward_option

		# 		iteration_output = {
		# 			country_effects = {
		# 				random_enemy_country = {
		# 					limit = {
		# 						NOT = { is_special_project_completed = sp:sp_nuclear_bomb }
		# 					}
		# 					custom_effect_tooltip = sp_nuclear_bomb_information_leak_reward_tt
		# 					hidden_effect = {
		# 						country_event = {
		# 							id = sp_nuclear_project_events.1
		# 							hours = 8
		# 							random_hours = 4
		# 						}
		# 					}
		# 				}
		# 			}
		# 		}
		# 	}
		# }

		# sp_nuclear_bomb_breakthrough_plutonium_reward = {
		# 	fire_only_once = yes

		# 	threshold = {
		# 		min = 20
		# 		max = 60
		# 	}

		# 	weight = {
		# 		base = 1
		# 		modifier = {
		# 			factor = 0.5
		# 			FROM = { has_country_flag = nuclear_bomb_high_security_flag }
		# 		}
		# 	}

		# 	option = {
		# 		token = sp_nuclear_bomb_breakthrough_plutonium_reward_option

		# 		iteration_output = {
		# 			country_effects = {
		# 				FROM = { add_project_progress_ratio = constant:sp_progress.gain.low }
		# 			}
		# 		}
		# 	}
		# }
	}
}

# ADVANDED NUCLEAR USAGE
# sp_commercial_nuclear_reactor = {
# 	specialization = specialization_nuclear
# 	icon = GFX_sp_commercial_nuclear_reactor

# 	project_tags = sp_tag_nuclear_power

# 	prototype_time = sp_time.prototype.long
# 	complexity = sp_complexity.large

# 	special_project_parent = {
# 		sp_nuclear_reactor
# 	}
# 	resource_cost = {
# 		resources = { steel=6 tungsten=4 chromium=7 }
# 	}
# 	allowed = {
# 		has_dlc = "Gotterdammerung"
# 	}
# 	available = {
# 		FROM = {
# 			has_tech = construction4
# 		}
# 	}

# 	project_output = {
# 		country_effects = {
# 			custom_override_tooltip = {
# 				tooltip = {
# 					localization_key = SP_UNLOCK_BUILDING_ICON_DESC
# 					BUILDING = commercial_nuclear_reactor
# 					BUILDING_DESCRIPTION = commercial_nuclear_reactor_desc
# 					ICON_FRAME = 27
# 				}
# 				set_technology = {
# 					commercial_nuclear_reactor_tech = 1
# 					popup = no
# 				}
# 			}
# 		}

# 		facility_state_effects = {
# 			hidden_effect = {
# 				IF = {
# 					limit = {
# 						nuclear_reactor_heavy_water > 0
# 					}
# 					remove_building = {
# 						type = nuclear_reactor_heavy_water
# 						level = 1
# 					}
# 					set_building_level = {
# 						type = commercial_nuclear_reactor
# 						level = 1
# 					}
# 				}
# 				ELSE_IF = {
# 					limit = {
# 						nuclear_reactor > 0
# 					}
# 					remove_building = {
# 						type = nuclear_reactor
# 						level = 1
# 					}
# 					set_building_level = {
# 						type = commercial_nuclear_reactor
# 						level = 1
# 					}
# 				}
# 				ELSE_IF = {
# 					limit = {
# 						free_building_slots = {
# 							building = industrial_complex
# 							size > 0
# 							include_locked = yes
# 						}
# 					}
# 					set_building_level = {
# 						type = commercial_nuclear_reactor
# 						level = 1
# 					}
# 				}
# 			}
# 		}
# 	}

# 	empty_reward_weight = {
# 		base = 0.5
# 	}

# 	generic_prototype_rewards = {
# 		sp_nuclear_scientist_xp_generic_reward
# 		sp_nuclear_minor_progress_generic_reward
# 		sp_nuclear_generic_industry_tech_reward
# 		sp_nuclear_generic_electronics_tech_reward
# 		sp_nuclear_reactor_radioactive_leak_stabilized_reward
# 		sp_nuclear_reactor_minor_explosion_reward
# 	}

# 	unique_prototype_rewards = {
# 		sp_commercial_nuclear_reactor_concerns_reward = {
# 			fire_only_once = yes

# 			threshold = {
# 				min = 30
# 				max = 90
# 			}

# 			weight = {
# 				base = 1.0
# 			}

# 			option = {
# 				token = sp_commercial_nuclear_reactor_concerns_reward_option_safety
# 				iteration_output = {
# 					country_effects = {
# 						add_popularity = {
# 							ideology = ROOT
# 							popularity = 0.05
# 						}
# 						add_political_power = 50
# 						FROM = { add_project_progress_ratio = constant:sp_progress.loss.medium }
# 						set_country_flag = no_filters_for_reactors_flag
# 					}
# 				}
# 			}

# 			option = {
# 				token = sp_commercial_nuclear_reactor_concerns_reward_option_ignore
# 				iteration_output = {
# 					country_effects = {
# 						add_popularity = {
# 							ideology = ROOT
# 							popularity = -0.05
# 						}
# 					}
# 				}
# 			}
# 		}

# 	}
# }


# sp_nuclear_engines = {
# 	specialization = specialization_nuclear
# 	icon = GFX_sp_nuclear_engines

# 	project_tags = sp_tag_nuclear_power

# 	prototype_time = sp_time.prototype.long
# 	complexity = sp_complexity.medium

# 	resource_cost = {
# 		resources = { steel=4 tungsten=2 chromium=5 }
# 	}

# 	special_project_parent = {
# 		sp_commercial_nuclear_reactor
# 	}
# 	allowed = {
# 		has_dlc = "Gotterdammerung"
# 	}
# 	available = {

# 	}

# 	project_output = {
# 		country_effects = {

# 		}

# 		enable_equipment_modules = {
# 			sub_ship_nuclear_engine_1
# 			heavy_ship_nuclear_engine_1
# 			carrier_ship_nuclear_engine_1
# 		}
# 	}

# 	empty_reward_weight = {
# 		base = 0.5
# 	}

# 	generic_prototype_rewards = {
# 		sp_nuclear_scientist_xp_generic_reward
# 		sp_nuclear_minor_progress_generic_reward
# 		sp_nuclear_generic_electronics_tech_reward
# 		sp_nuclear_war_support_generic_reward
# 		sp_nuclear_generic_industry_tech_reward
# 		sp_nuclear_reactor_radioactive_leak_stabilized_reward
# 		sp_nuclear_reactor_minor_explosion_reward
# 	}

# 	unique_prototype_rewards = {

# 	}
# }

# sp_thermo_nuclear_bomb = {
# 	specialization = specialization_nuclear
# 	icon = GFX_sp_thermo_nuclear_bomb

# 	project_tags = sp_tag_nuclear_warfare

# 	prototype_time = sp_time.prototype.long
# 	complexity = sp_complexity.insane

# 	resource_cost = {
# 		resources = { steel=2 tungsten=10 chromium=3 }
# 	}

# 	special_project_parent = {
# 		sp_nuclear_bomb
# 	}
# 	allowed = {
# 		has_dlc = "Gotterdammerung"
# 	}
# 	available = {

# 	}

# 	project_output = {
# 		country_effects = {
# 			custom_effect_tooltip = sp_thermo_nuclear_bomb_tt
# 			hidden_effect = {
# 				set_technology = {
# 					thermonuclear_bombs = 1
# 					popup = no
# 				}
# 			}
# 		}
# 	}

# 	empty_reward_weight = {
# 		base = 0.5
# 	}

# 	generic_prototype_rewards = {
# 		sp_nuclear_scientist_xp_generic_reward
# 		sp_nuclear_minor_progress_generic_reward
# 		sp_nuclear_generic_electronics_tech_reward
# 		sp_nuclear_war_support_generic_reward
# 		sp_nuclear_generic_industry_tech_reward
# 		sp_nuclear_major_political_interference_generic_reward
# 		sp_nuclear_bomb_theoretical_breakthrough_generic_reward
# 		sp_nuclear_bomb_critical_mass_generic_reward
# 		sp_nuclear_bomb_accident_generic_reward
# 	}

# 	unique_prototype_rewards = {
# 		sp_thermonuclear_bomb_test_reward = {
# 			fire_only_once = yes

# 			threshold = {
# 				min = 50
# 				max = 80
# 			}

# 			weight = {
# 				base = 1000
# 				modifier = {
# 					factor = 0
# 					FROM = {
# 						num_of_nukes < 5 # To minimize the risk of this not being a good option to get
# 					}
# 				}
# 			}
# 			option = {
# 				token = sp_thermonuclear_bomb_test_reward_option_no

# 				iteration_output = {
# 					country_effects = {
# 					}
# 				}
# 			}
# 			option = {
# 				token = sp_thermonuclear_bomb_test_reward_option_yes

# 				iteration_output = {
# 					country_effects = {
# 						IF = {
# 							limit = {
# 								num_of_nukes > 0
# 							}
# 							add_nuclear_bombs = -1
# 							FROM = { add_project_progress_ratio = constant:sp_progress.gain.high }
# 							set_country_flag = thermonuclear_weapon_test_flag
# 						}
# 						ELSE = {
# 							custom_effect_tooltip = "sp_no_nukes_available_tt"
# 						}

# 					}
# 				}
# 			}
# 		}
# 	}
# }

# sp_nuclear_warheads = {
# 	specialization = specialization_nuclear
# 	icon = GFX_sp_nuclear_warheads

# 	project_tags = sp_tag_nuclear_warfare

# 	prototype_time = sp_time.prototype.long
# 	complexity = sp_complexity.large

# 	resource_cost = {
# 		resources = { aluminium=4 tungsten=4 chromium=2 }
# 	}

# 	special_project_parent = {
# 		sp_nuclear_bomb
# 		# Country must have Medium range ballistic missiles to be able to start this project
# 		sp_rockets_medium_range_ballistic_missile
# 	}
# 	allowed = {
# 		has_dlc = "Gotterdammerung"
# 	}
# 	available = {
# 	}

# 	project_output = {
# 		country_effects = {

# 		}
# 		enable_equipments = {
# 			nuclear_missile_equipment_1
# 		}
# 	}

# 	empty_reward_weight = {
# 		base = 0.5
# 	}

# 	generic_prototype_rewards = {
# 		sp_nuclear_scientist_xp_generic_reward
# 		sp_nuclear_minor_progress_generic_reward
# 		sp_nuclear_generic_electronics_tech_reward
# 		sp_nuclear_war_support_generic_reward
# 		sp_nuclear_generic_industry_tech_reward
# 		sp_nuclear_major_political_interference_generic_reward
# 		sp_nuclear_bomb_theoretical_breakthrough_generic_reward
# 		sp_nuclear_bomb_critical_mass_generic_reward
# 		sp_nuclear_bomb_accident_generic_reward
# 	}

# 	unique_prototype_rewards = {

# 	}
# }

