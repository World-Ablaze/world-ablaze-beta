# General Nuclear Projects
# sp_nuclear_scientist_xp_generic_reward
# sp_nuclear_minor_progress_generic_reward
# sp_nuclear_minor_progress_generic_2_reward
# sp_nuclear_generic_electronics_tech_reward
# sp_nuclear_war_support_generic_reward
# sp_nuclear_generic_industry_tech_reward
# sp_nuclear_minor_security_generic_reward
# sp_nuclear_major_security_generic_reward
# sp_nuclear_war_priorities_generic_reward

# Reactor Projects
# sp_nuclear_reactor_radioactive_leak_stabilized_reward
# sp_nuclear_reactor_minor_explosion_reward
# sp_nuclear_reactor_graphite_purity_error_reward
# sp_nuclear_reactor_dupont_reward

# Bomb Projects
# sp_nuclear_bomb_accident_generic_reward
# sp_nuclear_bomb_critical_mass_generic_reward
# sp_nuclear_bomb_lacking_radar_reward
# sp_nuclear_bomb_wrong_trigger_reward

# General
sp_nuclear_scientist_xp_generic_reward = {
	fire_only_once = no

	threshold = {
		min = 10 # Relies on security unique reward
		max = 100
	}

	weight = {
		factor = 1.0
	}

	option = {
		token = sp_nuclear_scientist_xp_generic_reward_option

		iteration_output = {
			scientist_effects = {
				custom_effect_tooltip = sp_nuclear_scientist_xp_generic_reward_desc
				if = {
					limit = {
						FROM = { has_project_flag = sp_nuclear_security_choice_reward_high }
					}
					add_scientist_xp = {
						experience = constant:sp_scientist_xp.gain_high_security.medium
						specialization = specialization_nuclear
					}
					custom_effect_tooltip = sp_nuclear_security_high_tt
				}
				else = {
					add_scientist_xp = {
						experience = constant:sp_scientist_xp.gain.medium
						specialization = specialization_nuclear
					}
					custom_effect_tooltip = sp_nuclear_security_low_tt
				}
			}
		}
	}
}

sp_nuclear_minor_progress_generic_reward = {
	fire_only_once = no

	threshold = {
		min = 20 # Relies on u supply unique reward
		max = 100
	}

	weight = {
		factor = 1.0
	}

	option = {
		token = sp_nuclear_minor_progress_generic_reward_option

		iteration_output = {
			scientist_effects = { # Scoped for the tooltip
				custom_effect_tooltip = sp_nuclear_minor_progress_generic_reward_desc
			}
			country_effects = {
				sp_nuclear_progress_low = yes
			}
		}
	}
}

sp_nuclear_minor_progress_generic_2_reward = {
	fire_only_once = no

	threshold = {
		min = 20 # Relies on u supply unique reward
		max = 100
	}

	weight = {
		factor = 1.0
	}

	option = {
		token = sp_nuclear_minor_progress_generic_2_reward_option

		iteration_output = {
			scientist_effects = { # Scoped for the tooltip
				custom_effect_tooltip = sp_nuclear_minor_progress_generic_2_reward_desc
			}
			country_effects = {
				sp_nuclear_progress_low = yes
			}
		}
	}
}

sp_nuclear_generic_electronics_tech_reward = {
	fire_only_once = no

	threshold = {
		min = 0
		max = 100
	}

	weight = {
		base = 1.0
		modifier = {
			factor = 0.75
			FROM = {
				NOT = {
					has_idea = full_privatization
					has_idea = state_sponsored_economy
					has_idea = state_capitalism
				}
			}
		}
		# modifier = {
		# 	factor = 0.5
		# 	FROM = {
		# 		has_tech_bonus = {
		# 			category = electronics
		# 		}
		# 	}
		# }
	}

	option = {
		token = sp_nuclear_generic_reward_option_electronics_tech

		iteration_output = {
			scientist_effects = {
				custom_effect_tooltip = sp_nuclear_generic_electronics_tech_reward_desc
				if = {
					limit = {
						FROM = { has_project_flag = sp_nuclear_security_choice_reward_high }
					}
					add_scientist_xp = {
						experience = constant:sp_scientist_xp.gain_high_security.low
						specialization = specialization_nuclear
					}
					custom_effect_tooltip = sp_nuclear_security_high_tt
				}
				else = {
					add_scientist_xp = {
						experience = constant:sp_scientist_xp.gain.low
						specialization = specialization_nuclear
					}
					custom_effect_tooltip = sp_nuclear_security_low_tt
				}
			}
			country_effects = {
				random_list = {
					#Low Bonus
					20 = {
						add_tech_bonus = {
							name = sp_nuclear_generic_reward_option_electronics_tech_bonus_name
							bonus = 0.05
							uses = 1
							category = electronics
						}
					}
					#Mid Bonus
					70 = {
						add_tech_bonus = {
							name = sp_nuclear_generic_reward_option_electronics_tech_bonus_name
							bonus = 0.1
							uses = 1
							category = electronics
						}
					}
					#High Bonus
					10 = {
						modifier = {
							add = 20
							NOT = { FROM = { has_project_flag = sp_nuclear_security_choice_reward_high } }
						}
						add_tech_bonus = {
							name = sp_nuclear_generic_reward_option_electronics_tech_bonus_name
							bonus = 0.15
							uses = 1
							category = electronics
						}
					}
				}
			}
		}
	}
}

sp_nuclear_generic_industry_tech_reward = {
	fire_only_once = no

	threshold = {
		min = 0
		max = 100
	}

	weight = {
		base = 1.0
		modifier = {
			factor = 0.75
			FROM = {
				NOT = {
					has_idea = full_privatization
					has_idea = state_sponsored_economy
					has_idea = state_capitalism
				}
			}
		}
		# modifier = {
		# 	factor = 0.5
		# 	FROM = {
		# 		has_tech_bonus = {
		# 			category = industry
		# 		}
		# 	}
		# }
	}

	option = {
		token = sp_nuclear_generic_reward_option_industry_tech

		iteration_output = {
			scientist_effects = {
				custom_effect_tooltip = sp_nuclear_generic_industry_tech_reward_desc
				if = {
					limit = {
						FROM = { has_project_flag = sp_nuclear_security_choice_reward_high }
					}
					add_scientist_xp = {
						experience = constant:sp_scientist_xp.gain_high_security.low
						specialization = specialization_nuclear
					}
					custom_effect_tooltip = sp_nuclear_security_high_tt
				}
				else = {
					add_scientist_xp = {
						experience = constant:sp_scientist_xp.gain.low
						specialization = specialization_nuclear
					}
					custom_effect_tooltip = sp_nuclear_security_low_tt
				}
			}
			country_effects = {
				random_list = {
					#Low Bonus
					20 = {
						add_tech_bonus = {
							name = sp_nuclear_generic_reward_option_industry_tech_name
							bonus = 0.05
							uses = 1
							category = industry
						}
					}
					#Mid Bonus
					70 = {
						add_tech_bonus = {
							name = sp_nuclear_generic_reward_option_industry_tech_name
							bonus = 0.1
							uses = 1
							category = industry
						}
					}
					#High Bonus
					10 = {
						modifier = {
							add = 20
							NOT = { FROM = { has_project_flag = sp_nuclear_security_choice_reward_high } }
						}
						add_tech_bonus = {
							name = sp_nuclear_generic_reward_option_industry_tech_name
							bonus = 0.15
							uses = 1
							category = industry
						}
					}
				}
			}
		}
	}
}

sp_nuclear_minor_security_generic_reward = {
	fire_only_once = no

	threshold = {
		min = 10 # Relies on security unique reward
		max = 100
	}

	weight = {
		base = 1
		modifier = {
			factor = 0.5
			has_project_flag = sp_nuclear_security_choice_reward_high
		}
	}

	option = {
		token = sp_nuclear_minor_security_generic_reward_option

		iteration_output = {
			scientist_effects = { # Scoped for the tooltip
				custom_effect_tooltip = sp_nuclear_minor_security_generic_reward_desc
			}
			country_effects = {
				add_political_power = -25
				FROM = { add_project_progress_ratio = constant:sp_progress.loss.low }
			}
		}
	}
}

sp_nuclear_major_security_generic_reward = {
	fire_only_once = yes

	threshold = {
		min = 10 # Relies on security unique reward
		max = 100
	}

	weight = {
		base = 0
		modifier = {
			add = 1
			has_project_flag = sp_nuclear_security_choice_reward_low
		}
	}

	option = {
		token = sp_nuclear_minor_security_generic_reward_option_fire

		ai_will_do = {
			base = 1
		}

		iteration_output = {
			country_effects = {
				FROM = { add_project_progress_ratio = constant:sp_progress.loss.medium }
				every_other_country = {
					limit = {
						is_major = yes
					}
					custom_effect_tooltip = sp_nuclear_reactor_tested_reward_public_tt
					hidden_effect = {
						if = {
							limit = {
								has_tech = atomic_research
								NOT = { is_special_project_completed = sp:sp_nuclear_reactor }
							}
							sp:sp_nuclear_reactor = { add_project_progress_ratio = 0.05 }
						}
					}
				}
			}
		}
	}

	option = {
		token = sp_nuclear_minor_security_generic_reward_option_keep

		ai_will_do = {
			base = 0
		}

		iteration_output = {
			country_effects = {
				add_political_power = -150
				add_stability = -0.025
				add_war_support = -0.025
			}
			scientist_effects = {
				sp_nuclear_progress_medium = yes
			}
		}
	}
}

sp_nuclear_war_priorities_generic_reward = {
	fire_only_once = no

	threshold = {
		min = 5 # Needs to be able to lose progress
		max = 100
	}

	weight = {
		base = 0
		modifier = {
			add = 0.5
			FROM = {
				NOT = { has_government = democratic }
			}
		}
		modifier = {
			add = 0.5
			FROM = {
				has_war = yes
			}
		}
	}

	option = {
		token = sp_nuclear_war_priorities_generic_reward_option_agree

		ai_will_do = {
			base = 0

			modifier = {
				add = 1
				FROM = {
					NOT = { has_government = democratic }
				}
			}
		}

		iteration_output = {
			country_effects = {
				FROM = { add_project_progress_ratio = constant:sp_progress.loss.low }
			}
		}
	}

	option = {
		token = sp_nuclear_war_priorities_generic_reward_option_ignore

		ai_will_do = {
			base = 0

			modifier = {
				add = 1
				FROM = {
					has_government = democratic
				}
			}
		}

		iteration_output = {
			country_effects = {
				add_political_power = -50
			}
		}
	}
}

sp_nuclear_brain_drain_generic_reward = {
	fire_only_once = yes

	threshold = {
		min = 6 # Needs to be able to lose progress
		max = 100
	}

	weight = {
		base = 0
		modifier = {
			add = 1.0
			FROM = {
				has_government = fascism
			}
		}
	}

	option = {
		token = sp_nuclear_brain_drain_generic_reward_option

		iteration_output = {
			scientist_effects = { # Scoped for the tooltip
				custom_effect_tooltip = sp_nuclear_brain_drain_generic_reward_desc
			}
			country_effects = {
				FROM = { add_project_progress_ratio = constant:sp_progress.loss.medium }
			}
		}
	}
}

# Only reactor project
sp_nuclear_reactor_radioactive_leak_stabilized_reward = {
	fire_only_once = yes

	threshold = {
		min = 10 # Relies on security unique reward
		max = 100
	}

	weight = {
		base = 1
		modifier = {
			factor = 0.5
			var:scientist = {
				has_scientist_level = {
					level > 2
					specialization = specialization_nuclear
				}
			}
		}
	}

	option = {
		token = sp_nuclear_reactor_radioactive_leak_stabilized_reward_option

		iteration_output = {
			scientist_effects = {
				custom_effect_tooltip = sp_nuclear_reactor_radioactive_leak_stabilized_reward
				if = {
					limit = {
						FROM = { has_project_flag = sp_nuclear_security_choice_reward_high }
					}
					add_scientist_xp = {
						experience = constant:sp_scientist_xp.gain_high_security.medium
						specialization = specialization_nuclear
					}
					custom_effect_tooltip = sp_nuclear_security_high_tt
				}
				else = {
					add_scientist_xp = {
						experience = constant:sp_scientist_xp.gain.medium
						specialization = specialization_nuclear
					}
					custom_effect_tooltip = sp_nuclear_security_low_tt
				}
			}
			country_effects = {
				FROM = { add_project_progress_ratio = constant:sp_progress.loss.low }
			}
			facility_state_effects = {
				damage_building = {
					tags = facility
					damage = 0.2
					province = var:facility_province_id
				}
			}
		}
	}
}

sp_nuclear_reactor_minor_explosion_reward = {
	fire_only_once = yes

	threshold = {
		min = 10 # Relies on security unique reward
		max = 100
	}

	weight = {
		base = 1
		modifier = {
			factor = 0.5
			var:scientist = {
				has_scientist_level = {
					level > 1
					specialization = specialization_nuclear
				}
			}
		}
	}

	option = {
		token = sp_nuclear_reactor_minor_explosion_reward_option

		iteration_output = {
			scientist_effects = {
				if = {
					limit = {
						FROM = { has_project_flag = sp_nuclear_security_choice_reward_high }
					}
					add_scientist_xp = {
						experience = constant:sp_scientist_xp.gain_high_security.low
						specialization = specialization_nuclear
					}
					custom_effect_tooltip = sp_nuclear_security_high_tt
				}
				else = {
					add_scientist_xp = {
						experience = constant:sp_scientist_xp.gain.low
						specialization = specialization_nuclear
					}
					custom_effect_tooltip = sp_nuclear_security_low_tt
				}
				injure_scientist_for_days = 7
			}
			facility_state_effects = {
				damage_building = {
					tags = facility
					damage = 0.3
					province = var:facility_province_id
				}
			}
		}
	}
}

	# Graphite purity calculation errors
sp_nuclear_reactor_graphite_purity_error_reward = {
	allowed = {
		original_tag = GER
	}

	fire_only_once = yes

	threshold = {
		min = 60 # Relies on moderator choice unique reward
		max = 100
	}

	weight = {
		base = 0

		# Mostly for Germany
		modifier = {
			add = 1000
			FROM = {
				has_country_flag = nuclear_reactor_graphite_flag
				has_government = fascism
			}
			var:scientist = {
				has_scientist_level = {
					level < 4
					specialization = specialization_nuclear
				}
			}
		}

		# Generic
		modifier = {
			add = 1
			FROM = {
				has_country_flag = nuclear_reactor_graphite_flag
			}
			var:scientist = {
				has_scientist_level = {
					level < 3
					specialization = specialization_nuclear
				}
			}
		}
	}

	option = {
		token = sp_nuclear_reactor_graphite_purity_error_reward_option

		iteration_output = {
			country_effects = {
				FROM = { add_project_progress_ratio = constant:sp_progress.loss.high }
				custom_effect_tooltip = {
					localization_key = SP_UNLOCK_BUILDING
					BUILDING = nuclear_reactor_heavy_water
				}
				clr_country_flag = nuclear_reactor_graphite_flag
				set_country_flag = nuclear_reactor_heavy_water_flag
			}
		}
	}
}

	# USA DuPont assistance
sp_nuclear_reactor_dupont_reward = {
	allowed = {
		original_tag = USA
	}

	fire_only_once = yes

	threshold = {
		min = 80 # Relies on testing a nuclear reactor
		max = 100
	}

	weight = {
		base = 0
		modifier = {
			add = 1000
			FROM = {
				has_country_flag = GM_NEGOTIATIONS_2
				check_variable = { USA_GM_Dupont_attitude > -3 }
			}
		}
	}

	option = {
		token = sp_nuclear_reactor_dupont_reward_option

		iteration_output = {
			country_effects = {
				if = {
					limit = {
						check_variable = { USA_GM_Dupont_attitude > 1 }
					}
					sp_nuclear_progress_medium = yes
				}
				else = {
					sp_nuclear_progress_low = yes
					custom_effect_tooltip = sp_nuclear_reactor_dupont_reward_tt
				}
			}
		}
	}
}

# Only bomb project
sp_nuclear_bomb_accident_generic_reward = {
	fire_only_once = no

	threshold = {
		min = 0
		max = 100
	}

	weight = {
		base = 1
		modifier = {
			factor = 0.5
			FROM = { has_country_flag = nuclear_bomb_high_security_flag }
		}
		modifier = {
			factor = 1.5
			FROM = { has_war = yes }
		}
	}

	option = {
		token = sp_nuclear_bomb_accident_generic_reward_option

		iteration_output = {
			facility_state_effects = {
				damage_building = {
					tags = facility
					damage = 0.2
					province = var:facility_province_id
				}
			}
		}
	}
}

sp_nuclear_bomb_critical_mass_generic_reward = {
	fire_only_once = yes

	threshold = {
		min = 5 # Needs to be able to lose progress
		max = 100
	}

	weight = {
		base = 1
		modifier = {
			factor = 0.5
			var:scientist = {
				has_scientist_level = {
					level > 3
					specialization = specialization_nuclear
				}
			}
		}
	}

	option = {
		token = sp_nuclear_bomb_critical_mass_generic_reward_option

		iteration_output = {
			country_effects = {
				FROM = { add_project_progress_ratio = constant:sp_progress.loss.low }
			}
			scientist_effects = {
				add_scientist_xp = {
					experience = constant:sp_scientist_xp.gain.low
					specialization = specialization_nuclear
				}
				injure_scientist_for_days = 14
			}
			facility_state_effects = {
				damage_building = {
					tags = facility
					damage = 0.3
					province = var:facility_province_id
				}
			}
		}
	}
}

	# Lacking Radar tech
sp_nuclear_bomb_lacking_radar_reward = {
	fire_only_once = yes

	threshold = {
		min = 80 # Relies on fuze choice unique reward
		max = 100
	}

	weight = {
		base = 0
		modifier = {
			add = 1000
			FROM = {
				NOT = { has_tech = advanced_centimetric_radar }
			}
		}
	}

	option = {
		token = sp_nuclear_bomb_fuze_choice_reward_barometer

		iteration_output = {
			country_effects = {
				custom_effect_tooltip = sp_nuclear_bomb_lacking_radar_reward_desc
				custom_effect_tooltip = sp_nuclear_bomb_trigger_choice_reward_radar_loss_tt
				FROM = { add_project_progress_ratio = constant:sp_progress.loss.high }
				custom_override_tooltip = {
					tooltip = {
						localization_key = SP_COST_RESOURCE
						RESOURCE = chromium
						AMOUNT = 10
						ICON_FRAME = 6
					}
					add_to_variable = { sp_nuclear_bomb_country_resource_cost_chromium = 10 }
					add_to_variable = { sp_nuclear_cost_country_resource_cost_chromium = 10 }
				}
				custom_override_tooltip = {
					tooltip = {
						localization_key = SP_COST_CIV
						AMOUNT = 5
					}
					add_to_variable = { sp_nuclear_bomb_civilian_factory_use = 5 }
					add_to_variable = { sp_nuclear_cost_civilian_factory_use = 5 }
				}
				custom_effect_tooltip = sp_nuclear_bomb_dud_tt
			}
		}
	}

	option = {
		token = sp_nuclear_bomb_trigger_choice_reward_clock

		iteration_output = {
			country_effects = {
				custom_effect_tooltip = sp_nuclear_bomb_lacking_radar_reward_desc
				custom_effect_tooltip = sp_nuclear_bomb_trigger_choice_reward_radar_loss_tt
				FROM = { add_project_progress_ratio = constant:sp_progress.loss.high }
				custom_override_tooltip = {
					tooltip = {
						localization_key = SP_COST_CIV
						AMOUNT = 10
					}
					add_to_variable = { sp_nuclear_bomb_civilian_factory_use = 10 }
					add_to_variable = { sp_nuclear_cost_civilian_factory_use = 10 }
				}
				custom_effect_tooltip = sp_nuclear_bomb_dud_tt
			}
		}
	}
}

	# Wrong trigger chosen for material
sp_nuclear_bomb_wrong_trigger_reward = {
	fire_only_once = yes

	threshold = {
		min = 40 # Relies on trigger choice unique reward
		max = 100
	}

	weight = {
		base = 0
		modifier = {
			add = 1000
			FROM = {
				OR = {
					AND = {
						has_country_flag = sp_nuclear_bomb_trigger_gun
						has_country_flag = sp_nuclear_reactor_choice_reward_plutonium
					}
					AND = {
						has_country_flag = sp_nuclear_bomb_trigger_implosion
						has_country_flag = sp_nuclear_reactor_choice_reward_uranium
					}
				}
			}
		}
	}

	option = {
		token = sp_nuclear_bomb_wrong_trigger_reward_option

		iteration_output = {
			country_effects = {
				if = {
					limit = {
						has_country_flag = sp_nuclear_bomb_trigger_implosion
						has_country_flag = sp_nuclear_reactor_choice_reward_uranium
					}
					custom_effect_tooltip = sp_nuclear_bomb_wrong_trigger_reward_option_uranium_tt
					FROM = { add_project_progress_ratio = constant:sp_progress.loss.medium }
					custom_override_tooltip = {
						tooltip = {
							localization_key = SP_COST_CIV
							AMOUNT = 5
						}
						add_to_variable = { sp_nuclear_bomb_civilian_factory_use = 5 }
						add_to_variable = { sp_nuclear_cost_civilian_factory_use = 5 }
					}
				}
				else_if = {
					limit = {
						has_country_flag = sp_nuclear_bomb_trigger_gun
						has_country_flag = sp_nuclear_reactor_choice_reward_plutonium
					}
					custom_effect_tooltip = sp_nuclear_bomb_wrong_trigger_reward_option_plutonium_tt
					FROM = { add_project_progress_ratio = constant:sp_progress.loss.medium }
					custom_override_tooltip = {
						tooltip = {
							localization_key = SP_COST_CIV
							AMOUNT = 10
						}
						add_to_variable = { sp_nuclear_bomb_civilian_factory_use = 10 }
						add_to_variable = { sp_nuclear_cost_civilian_factory_use = 10 }
					}
				}
			}
		}
	}
}
