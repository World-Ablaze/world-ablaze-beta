########     ###    ##    ## ##       ####  ######   ##     ## ########
##     ##   ## ##    ##  ##  ##        ##  ##    ##  ##     ##    ##
##     ##  ##   ##    ####   ##        ##  ##        ##     ##    ##
##     ## ##     ##    ##    ##        ##  ##   #### #########    ##
##     ## #########    ##    ##        ##  ##    ##  ##     ##    ##
##     ## ##     ##    ##    ##        ##  ##    ##  ##     ##    ##
########  ##     ##    ##    ######## ####  ######   ##     ##    ##
#######################################################################

 #######  #### ##       ######## #### ######## ##       ########
##     ##  ##  ##       ##        ##  ##       ##       ##     ##
##     ##  ##  ##       ##        ##  ##       ##       ##     ##
##     ##  ##  ##       ######    ##  ######   ##       ##     ##
##     ##  ##  ##       ##        ##  ##       ##       ##     ##
##     ##  ##  ##       ##        ##  ##       ##       ##     ##
 #######  #### ######## ##       #### ######## ######## ########
types = {
	oil_field_raid_day = {
		days_to_prepare = 90

		ai_will_do = {
			base = 0
			# base = 1
			# modifier = {
			# 	# Don't target anyone who is not a potential enemy
			# 	factor = 0
			# 	NOT = {
			# 		is_in_array = {
			# 			array = potential_and_current_enemies
			# 			value = FROM  # Target country
			# 		}
			# 	}
			# }
			# modifier = {
			# 	# Don't target anyone who is not a potential enemy
			# 	factor = 0.25
			# 	NOT = {
			# 		has_war_with = FROM
			# 	}
			# }
			# modifier = {
			# 	factor = 3 # Historical
			# 	original_tag = ENG
			# 	has_war_with = GER
			# 	FROM = {
			# 		original_tag = ROM
			# 		is_in_faction_with = GER
			# 	}
			# }
		}

		category = air_raids

		command_power = 5 # command power allocation cost

		allowed = {
		}
		# Raid Type is visible
		visible = {
			has_tech = day_bombing
			OR = {
				is_major = yes
				has_deployed_air_force_size = {
					size > 2999
				}
			}
		}
		# Specific Target is visible
		show_target = {
			has_war_with = FROM
		}

		# Can prepare
		available = {
			has_fuel > 24999
		}

		# Can launch a raid
		launchable = {
			has_war_with = FROM
			has_fuel > 24999
		}

		target_type = {
			state = {
				# Resouce amount needed to be eligible as raid target
				oil > 19
				# If the site has been hit recently you can't target it again
				NOT = {
					OR = {
						has_dynamic_modifier = {
							modifier = oil_fields_lightly_damaged_modifier
						}
						has_dynamic_modifier = {
							modifier = oil_fields_damaged_modifier
						}
						has_dynamic_modifier = {
							modifier = oil_fields_critically_damaged_modifier
						}
					}
				}
			}
		}
		custom_map_icon = GFX_raid_type_icon_oil_field_raid
		target_icon = GFX_oilfield_target_icon
		target_loc_key = raid_target_name_oil_field
		arrow = {
			type = air
		}
		unit_model = {
			type = equipment
		}
		launch_sound = raid_launch_air

		unit_requirements = {
			equipment = {
				type = { medium_plane_airframe large_plane_airframe heavy_large_plane_airframe }
				modules = {
					bomb_920kg_bomb_bay
					bomb_1000kg_bomb_bay
					bomb_1380kg_bomb_bay
					bomb_1400kg_bomb_bay
					bomb_1500kg_bomb_bay
					bomb_1840kg_bomb_bay
					bomb_2000kg_bomb_bay
					bomb_2300kg_bomb_bay
					bomb_2500kg_bomb_bay
					bomb_2760kg_bomb_bay
					bomb_3000kg_bomb_bay
					bomb_3220kg_bomb_bay
					bomb_3680kg_bomb_bay
					bomb_4600kg_bomb_bay
					bomb_5000kg_bomb_bay
					bomb_5520kg_bomb_bay
					bomb_8280kg_bomb_bay
				}
				amount = { min = 300 }
			}
		}

		starting_point = {
			types = { air_base }
		}

		success_factors = {
			success = {
				base = 0.5

				# Raiding unit modifiers
				experience = {
					reference = 1.0
					weight = 0.1
					start_weight = -0.1
				}
				# air_agility = {
				# 	reference = 100.0 # As air unit agility approaches 100 (as defined by the value above), increase chance by this value
				# 	weight = 0.1 # At 0 agility, the modifier will have negative effect.
				# 	start_weight = -0.1 # The modifier will scale linearly, meaning at 50 agility, the modifier will be 0.
				# }
				reliability = {
					reference = 1
					weight = 0.1
					start_weight = -0.1
				}
				air_defence = {
					reference = 100
					weight = 0.1
					start_weight = -0.1
				}
				strategic_bomber = {
					reference = 75
					weight = 0.2
					start_weight = -0.2
				}

				## Actor Modifiers
				air_superiority = {
					reference = 1
					start_reference = 0.5
					weight = 0.25
					start_weight = -0.25
				}

				### Target Modifiers
				anti_air = {
					reference = 10
					weight = -0.5
				}
				interception = {
					reference = 500 # More than 500 fighters won't really make any difference
					weight = -0.25
				}
				radar = {
					weight = -0.1
				}
				intel = {
					weight = 0.2
					start_weight = -0.1
					reference = 100
				}
			}

			critical = {
				base = 0.10
			}
		}

		success_levels = {
			failure = {
				victim_effects = {
					var:target_state = {
						custom_effect_tooltip = raid_failure_tt
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.25
						ratio = yes
					}
					raid_add_unit_experience = 0.05
					var:actor_country = {
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "nuke_entity"
					animation = "attack"
				}
				visual_effect = {
					entity = "raid_failed_entity"
					animation = "attack"
				}
			}
			limited_success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						add_dynamic_modifier = {
							modifier = oil_fields_lightly_damaged_modifier
							days = 90
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.15
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.1
					var:actor_country = {
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
			success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						add_dynamic_modifier = {
							modifier = oil_fields_damaged_modifier
							days = 120
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.1
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.2

					var:actor_country = {
						air_experience = 5
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_success_entity"
					animation = "attack"
				}
			}
			critical_success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						add_dynamic_modifier = {
							modifier = oil_fields_critically_damaged_modifier
							days = 180
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.05
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.35

					var:actor_country = {
						air_experience = 10
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_critical_success_entity"
					animation = "attack"
				}
			}
		}
	}
 ######  ##    ## ##    ## ######## ##     ##
##    ##  ##  ##  ###   ##    ##    ##     ##
##         ####   ####  ##    ##    ##     ##
 ######     ##    ## ## ##    ##    #########
      ##    ##    ##  ####    ##    ##     ##
##    ##    ##    ##   ###    ##    ##     ##
 ######     ##    ##    ##    ##    ##     ##
	synthetic_refinery_raid_day = {
		days_to_prepare = 90

		ai_will_do = {
			base = 0
			# base = 1
			# modifier = {
			# 	# Don't target anyone who is not a potential enemy
			# 	factor = 0
			# 	NOT = {
			# 		is_in_array = {
			# 			array = potential_and_current_enemies
			# 			value = FROM  # Target country
			# 		}
			# 	}
			# }
			# modifier = {
			# 	# Don't target anyone who is not a potential enemy
			# 	factor = 0.25
			# 	NOT = {
			# 		has_war_with = FROM
			# 	}
			# }
			# modifier = {
			# 	factor = 3 # Historical
			# 	original_tag = ENG
			# 	has_war_with = GER
			# 	FROM = {
			# 		original_tag = ROM
			# 		is_in_faction_with = GER
			# 	}
			# }
		}

		category = air_raids

		command_power = 5 # command power allocation cost

		allowed = {
			always = yes
		}
		# Raid Type is visible
		visible = {
			has_tech = day_bombing
			OR = {
				is_major = yes
				has_deployed_air_force_size = {
					size > 2999
				}
			}
		}
		# Specific Target is visible
		show_target = {
			has_war_with = FROM
		}

		# Can prepare
		available = {

		}

		# Can launch a raid
		launchable = {
			has_war_with = FROM
			has_fuel > 24999
		}

		target_type = {
			state = {
				non_damaged_building_level = {
					building = synthetic_refinery
					level > 3
				}
			}
		}
		custom_map_icon = GFX_raid_type_icon_synthetic_refinery_raid
		target_icon = GFX_synthetic_refinery_target_icon
		target_loc_key = raid_target_name_synthetic_refinery
		arrow = {
			type = air
		}
		unit_model = {
			type = equipment
		}
		launch_sound = raid_launch_air

		unit_requirements = {
			equipment = {
				type = { medium_plane_airframe large_plane_airframe heavy_large_plane_airframe }
				modules = {
					bomb_920kg_bomb_bay
					bomb_1000kg_bomb_bay
					bomb_1380kg_bomb_bay
					bomb_1400kg_bomb_bay
					bomb_1500kg_bomb_bay
					bomb_1840kg_bomb_bay
					bomb_2000kg_bomb_bay
					bomb_2300kg_bomb_bay
					bomb_2500kg_bomb_bay
					bomb_2760kg_bomb_bay
					bomb_3000kg_bomb_bay
					bomb_3220kg_bomb_bay
					bomb_3680kg_bomb_bay
					bomb_4600kg_bomb_bay
					bomb_5000kg_bomb_bay
					bomb_5520kg_bomb_bay
					bomb_8280kg_bomb_bay
				}
				amount = { min = 300 }
			}
		}

		starting_point = {
			types = { air_base }
		}

		success_factors = {
			success = {
				base = 0.5

				# Raiding unit modifiers
				experience = {
					reference = 1.0
					weight = 0.1
					start_weight = -0.1
				}
				# air_agility = {
				# 	reference = 100.0 # As air unit agility approaches 100 (as defined by the value above), increase chance by this value
				# 	weight = 0.1 # At 0 agility, the modifier will have negative effect.
				# 	start_weight = -0.1 # The modifier will scale linearly, meaning at 50 agility, the modifier will be 0.
				# }
				reliability = {
					reference = 1
					weight = 0.1
					start_weight = -0.1
				}
				air_defence = {
					reference = 100
					weight = 0.05
					start_weight = -0.05
				}
				strategic_bomber = {
					reference = 75
					weight = 0.2
					start_weight = -0.2
				}

				## Actor Modifiers
				air_superiority = {
					reference = 1
					start_reference = 0.5
					weight = 0.25
					start_weight = -0.25
				}

				### Target Modifiers
				anti_air = {
					reference = 10
					weight = -0.5
				}
				interception = {
					reference = 500 # More than 500 fighters won't really make any difference
					weight = -0.25
				}
				radar = {
					weight = -0.1
				}
				intel = {
					weight = 0.3
					start_weight = -0.1
					reference = 100
				}
			}

			critical = {
				base = 0.10
			}
		}

		success_levels = {
			failure = {
				victim_effects = {
					var:target_state = {
						custom_effect_tooltip = raid_failure_tt
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.25
						ratio = yes
					}
					raid_add_unit_experience = 0.05
					var:actor_country = {
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "nuke_entity"
					animation = "attack"
				}
				visual_effect = {
					entity = "raid_failed_entity"
					animation = "attack"
				}
			}
			limited_success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						set_variable = { building_damage_synthetic_refinery_day = non_damaged_building_level@synthetic_refinery } # Get how many buildings in the state
						multiply_variable = { building_damage_synthetic_refinery_day = 0.25 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
						# round_temp_variable = building_damage_synthetic_refinery_day # Round to nearest integer to display number of buildings destroyed to player
						custom_override_tooltip = {
							tooltip = {
								localization_key = raid_damage_buildings_tt
								building = synthetic_refinery
								num = [?building_damage_synthetic_refinery_day]
							}
							meta_effect = {
								text = {
									damage_building = {
										type = synthetic_refinery
										damage = [BUILDING_DAMAGE_META_VAR]
									}
								}
								BUILDING_DAMAGE_META_VAR = "[?building_damage_synthetic_refinery_day]"
							}
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.15
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.1
					var:actor_country = {
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
			success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						set_variable = { building_damage_synthetic_refinery_day = non_damaged_building_level@synthetic_refinery } # Get how many buildings in the state
						multiply_variable = { building_damage_synthetic_refinery_day = 0.5 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
						# round_temp_variable = building_damage_synthetic_refinery_day # Round to nearest integer to display number of buildings destroyed to player
						custom_override_tooltip = {
							tooltip = {
								localization_key = raid_damage_buildings_tt
								building = synthetic_refinery
								num = [?building_damage_synthetic_refinery_day]
							}
							meta_effect = {
								text = {
									damage_building = {
										type = synthetic_refinery
										damage = [BUILDING_DAMAGE_META_VAR]
									}
								}
								BUILDING_DAMAGE_META_VAR = "[?building_damage_synthetic_refinery_day]"
							}
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.1
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.2

					var:actor_country = {
						air_experience = 5
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_success_entity"
					animation = "attack"
				}
			}
			critical_success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						set_variable = { building_damage_synthetic_refinery_day = non_damaged_building_level@synthetic_refinery } # Get how many buildings in the state
						multiply_variable = { building_damage_synthetic_refinery_day = 0.75 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
						# round_temp_variable = building_damage_synthetic_refinery_day # Round to nearest integer to display number of buildings destroyed to player
						custom_override_tooltip = {
							tooltip = {
								localization_key = raid_damage_buildings_tt
								building = synthetic_refinery
								num = [?building_damage_synthetic_refinery_day]
							}
							meta_effect = {
								text = {
									damage_building = {
										type = synthetic_refinery
										damage = [BUILDING_DAMAGE_META_VAR]
									}
								}
								BUILDING_DAMAGE_META_VAR = "[?building_damage_synthetic_refinery_day]"
							}
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.05
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.35

					var:actor_country = {
						air_experience = 10
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_critical_success_entity"
					animation = "attack"
				}
			}
		}
	}
 ######  ######## ######## ######## ##
##    ##    ##    ##       ##       ##
##          ##    ##       ##       ##
 ######     ##    ######   ######   ##
      ##    ##    ##       ##       ##
##    ##    ##    ##       ##       ##
 ######     ##    ######## ######## ########
	steel_refinery_raid_day = {
		days_to_prepare = 90

		ai_will_do = {
			base = 0
			# base = 1
			# modifier = {
			# 	# Don't target anyone who is not a potential enemy
			# 	factor = 0
			# 	NOT = {
			# 		is_in_array = {
			# 			array = potential_and_current_enemies
			# 			value = FROM  # Target country
			# 		}
			# 	}
			# }
			# modifier = {
			# 	# Don't target anyone who is not a potential enemy
			# 	factor = 0.25
			# 	NOT = {
			# 		has_war_with = FROM
			# 	}
			# }
			# modifier = {
			# 	factor = 3 # Historical
			# 	original_tag = ENG
			# 	has_war_with = GER
			# 	FROM = {
			# 		original_tag = ROM
			# 		is_in_faction_with = GER
			# 	}
			# }
		}

		category = air_raids

		command_power = 5 # command power allocation cost

		allowed = {
			always = yes
		}
		# Raid Type is visible
		visible = {
			has_tech = day_bombing
			OR = {
				is_major = yes
				has_deployed_air_force_size = {
					size > 2999
				}
			}
		}
		# Specific Target is visible
		show_target = {
			has_war_with = FROM
		}

		# Can prepare
		available = {

		}

		# Can launch a raid
		launchable = {
			has_war_with = FROM
			has_fuel > 24999
		}

		target_type = {
			state = {
				set_temp_variable = { tmp_num_total_mills = non_damaged_building_level@steel_refinery}
				add_to_temp_variable = { tmp_num_total_mills = non_damaged_building_level@hydro_steel_refinery}
				check_variable = { tmp_num_total_mills > 3 }
			}
		}
		custom_map_icon = GFX_raid_type_icon_steel_refinery_raid
		target_icon = GFX_steel_refinery_target_icon
		target_loc_key = raid_target_name_steel_refinery
		arrow = {
			type = air
		}
		unit_model = {
			type = equipment
		}
		launch_sound = raid_launch_air

		unit_requirements = {
			equipment = {
				type = { medium_plane_airframe large_plane_airframe heavy_large_plane_airframe }
				modules = {
					bomb_920kg_bomb_bay
					bomb_1000kg_bomb_bay
					bomb_1380kg_bomb_bay
					bomb_1400kg_bomb_bay
					bomb_1500kg_bomb_bay
					bomb_1840kg_bomb_bay
					bomb_2000kg_bomb_bay
					bomb_2300kg_bomb_bay
					bomb_2500kg_bomb_bay
					bomb_2760kg_bomb_bay
					bomb_3000kg_bomb_bay
					bomb_3220kg_bomb_bay
					bomb_3680kg_bomb_bay
					bomb_4600kg_bomb_bay
					bomb_5000kg_bomb_bay
					bomb_5520kg_bomb_bay
					bomb_8280kg_bomb_bay
				}
				amount = { min = 300 }
			}
		}

		starting_point = {
			types = { air_base }
		}

		success_factors = {
			success = {
				base = 0.5

				# Raiding unit modifiers
				experience = {
					reference = 1.0
					weight = 0.1
					start_weight = -0.1
				}
				# air_agility = {
				# 	reference = 100.0 # As air unit agility approaches 100 (as defined by the value above), increase chance by this value
				# 	weight = 0.1 # At 0 agility, the modifier will have negative effect.
				# 	start_weight = -0.1 # The modifier will scale linearly, meaning at 50 agility, the modifier will be 0.
				# }
				reliability = {
					reference = 1
					weight = 0.1
					start_weight = -0.1
				}
				air_defence = {
					reference = 100
					weight = 0.05
					start_weight = -0.05
				}
				strategic_bomber = {
					reference = 75
					weight = 0.2
					start_weight = -0.2
				}

				## Actor Modifiers
				air_superiority = {
					reference = 1
					start_reference = 0.5
					weight = 0.25
					start_weight = -0.25
				}

				### Target Modifiers
				anti_air = {
					reference = 10
					weight = -0.5
				}
				interception = {
					reference = 500 # More than 500 fighters won't really make any difference
					weight = -0.25
				}
				radar = {
					weight = -0.1
				}
				intel = {
					weight = 0.3
					start_weight = -0.1
					reference = 100
				}
			}

			critical = {
				base = 0.10
			}
		}

		success_levels = {
			failure = {
				victim_effects = {
					var:target_state = {
						custom_effect_tooltip = raid_failure_tt
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.25
						ratio = yes
					}
					raid_add_unit_experience = 0.05
					var:actor_country = {
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "nuke_entity"
					animation = "attack"
				}
				visual_effect = {
					entity = "raid_failed_entity"
					animation = "attack"
				}
			}
			limited_success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						set_variable = { building_damage_steel_refinery_day = non_damaged_building_level@steel_refinery } # Get how many buildings in the state
						if = {
							limit = {
								check_variable = { building_damage_steel_refinery_day > 0 }
							}
							multiply_variable = { building_damage_steel_refinery_day = 0.25 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
							# round_temp_variable = building_damage_steel_refinery_day # Round to nearest integer to display number of buildings destroyed to player
							custom_override_tooltip = {
								tooltip = {
									localization_key = raid_damage_buildings_tt
									building = steel_refinery
									num = [?building_damage_steel_refinery_day]
								}
								meta_effect = {
									text = {
										damage_building = {
											type = steel_refinery
											damage = [BUILDING_DAMAGE_META_VAR]
										}
									}
									BUILDING_DAMAGE_META_VAR = "[?building_damage_steel_refinery_day]"
								}
							}
							log = "Steel limited success: Mill: temp_damage_building: [?building_damage_steel_refinery_day]."
						}
						set_temp_variable = { damage_building_hydro_steel_refinery_day = non_damaged_building_level@hydro_steel_refinery } # Get how many buildings in the state
						if = {
							limit = {
								check_variable = { damage_building_hydro_steel_refinery_day > 0 }
							}
							multiply_temp_variable = { damage_building_hydro_steel_refinery_day = 0.25 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
							# round_temp_variable = damage_building_hydro_steel_refinery_day # Round to nearest integer to display number of buildings destroyed to player
							custom_override_tooltip = {
								tooltip = {
									localization_key = raid_damage_buildings_tt
									building = hydro_steel_refinery
									num = [?damage_building_hydro_steel_refinery_day]
								}
								meta_effect = {
									text = {
										damage_building = {
											type = hydro_steel_refinery
											damage = [BUILDING_DAMAGE_META_VAR]
										}
									}
									BUILDING_DAMAGE_META_VAR = "[?damage_building_hydro_steel_refinery_day]"
								}
							}
							log = "Steel limited success: Hydro: temp_damage_building: [?damage_building_hydro_steel_refinery_day]."
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.15
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.1
					var:actor_country = {
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
			success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						set_variable = { building_damage_steel_refinery_day = non_damaged_building_level@steel_refinery } # Get how many buildings in the state
						if = {
							limit = {
								check_variable = { building_damage_steel_refinery_day > 0 }
							}
							multiply_variable = { building_damage_steel_refinery_day = 0.5 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
							# round_temp_variable = building_damage_steel_refinery_day # Round to nearest integer to display number of buildings destroyed to player
							log = "Steel success: Mill: temp_damage_building: [?building_damage_steel_refinery_day]."
							custom_override_tooltip = {
								tooltip = {
									localization_key = raid_damage_buildings_tt
									building = steel_refinery
									num = [?building_damage_steel_refinery_day]
								}
								meta_effect = {
									text = {
										damage_building = {
											type = steel_refinery
											damage = [BUILDING_DAMAGE_META_VAR]
										}
									}
									BUILDING_DAMAGE_META_VAR = "[?building_damage_steel_refinery_day]"
								}
							}
						}
						set_temp_variable = { damage_building_hydro_steel_refinery_day = non_damaged_building_level@hydro_steel_refinery } # Get how many buildings in the state
						if = {
							limit = {
								check_variable = { damage_building_hydro_steel_refinery_day > 0 }
							}
							multiply_temp_variable = { damage_building_hydro_steel_refinery_day = 0.5 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
							# round_temp_variable = damage_building_hydro_steel_refinery_day # Round to nearest integer to display number of buildings destroyed to player
							log = "Steel success: Hydro: damage_building_hydro_steel_refinery_day: [?damage_building_hydro_steel_refinery_day]."
							custom_override_tooltip = {
								tooltip = {
									localization_key = raid_damage_buildings_tt
									building = hydro_steel_refinery
									num = [?damage_building_hydro_steel_refinery_day]
								}
								meta_effect = {
									text = {
										damage_building = {
											type = hydro_steel_refinery
											damage = [BUILDING_DAMAGE_META_VAR]
										}
									}
									BUILDING_DAMAGE_META_VAR = "[?damage_building_hydro_steel_refinery_day]"
								}
							}
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.1
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.2

					var:actor_country = {
						air_experience = 5
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_success_entity"
					animation = "attack"
				}
			}
			critical_success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						set_variable = { building_damage_steel_refinery_day = non_damaged_building_level@steel_refinery } # Get how many buildings in the state
						if = {
							limit = {
								check_variable = { building_damage_steel_refinery_day > 0 }
							}
							multiply_variable = { building_damage_steel_refinery_day = 0.75 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
							# round_temp_variable = building_damage_steel_refinery_day # Round to nearest integer to display number of buildings destroyed to player
							custom_override_tooltip = {
								tooltip = {
									localization_key = raid_damage_buildings_tt
									building = steel_refinery
									num = [?building_damage_steel_refinery_day]
								}
								meta_effect = {
									text = {
										damage_building = {
											type = steel_refinery
											damage = [BUILDING_DAMAGE_META_VAR]
										}
									}
									BUILDING_DAMAGE_META_VAR = "[?building_damage_steel_refinery_day]"
								}
							}
							log = "Steel critical success: Mill: temp_damage_building: [?building_damage_steel_refinery_day]."
						}
						set_temp_variable = { damage_building_hydro_steel_refinery_day = non_damaged_building_level@hydro_steel_refinery } # Get how many buildings in the state
						if = {
							limit = {
								check_variable = { damage_building_hydro_steel_refinery_day > 0 }
							}
							multiply_temp_variable = { damage_building_hydro_steel_refinery_day = 0.75 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
							# round_temp_variable = damage_building_hydro_steel_refinery_day # Round to nearest integer to display number of buildings destroyed to player
							custom_override_tooltip = {
								tooltip = {
									localization_key = raid_damage_buildings_tt
									building = hydro_steel_refinery
									num = [?damage_building_hydro_steel_refinery_day]
								}
								meta_effect = {
									text = {
										damage_building = {
											type = hydro_steel_refinery
											damage = [BUILDING_DAMAGE_META_VAR]
										}
									}
									BUILDING_DAMAGE_META_VAR = "[?damage_building_hydro_steel_refinery_day]"
								}
							}
							log = "Steel critical success: Hydro: temp_damage_building: [?damage_building_hydro_steel_refinery_day]."
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.05
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.35

					var:actor_country = {
						air_experience = 10
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_critical_success_entity"
					animation = "attack"
				}
			}
		}
	}
   ###    ##       ##     ## ##     ## #### ##    ## ##     ## ##     ##
  ## ##   ##       ##     ## ###   ###  ##  ###   ## ##     ## ###   ###
 ##   ##  ##       ##     ## #### ####  ##  ####  ## ##     ## #### ####
##     ## ##       ##     ## ## ### ##  ##  ## ## ## ##     ## ## ### ##
######### ##       ##     ## ##     ##  ##  ##  #### ##     ## ##     ##
##     ## ##       ##     ## ##     ##  ##  ##   ### ##     ## ##     ##
##     ## ########  #######  ##     ## #### ##    ##  #######  ##     ##
	aluminium_refinery_raid_day = {
		days_to_prepare = 90

		ai_will_do = {
			base = 0
			# base = 1
			# modifier = {
			# 	# Don't target anyone who is not a potential enemy
			# 	factor = 0
			# 	NOT = {
			# 		is_in_array = {
			# 			array = potential_and_current_enemies
			# 			value = FROM  # Target country
			# 		}
			# 	}
			# }
			# modifier = {
			# 	# Don't target anyone who is not a potential enemy
			# 	factor = 0.25
			# 	NOT = {
			# 		has_war_with = FROM
			# 	}
			# }
			# modifier = {
			# 	factor = 3 # Historical
			# 	original_tag = ENG
			# 	has_war_with = GER
			# 	FROM = {
			# 		original_tag = ROM
			# 		is_in_faction_with = GER
			# 	}
			# }
		}

		category = air_raids

		command_power = 5 # command power allocation cost

		allowed = {
			always = yes
		}
		# Raid Type is visible
		visible = {
			has_tech = day_bombing
			OR = {
				is_major = yes
				has_deployed_air_force_size = {
					size > 2999
				}
			}
		}
		# Specific Target is visible
		show_target = {
			has_war_with = FROM
		}

		# Can prepare
		available = {

		}

		# Can launch a raid
		launchable = {
			has_war_with = FROM
			has_fuel > 24999
		}

		target_type = {
			state = {
				set_temp_variable = { tmp_num_total_mills = non_damaged_building_level@aluminium_refinery}
				add_to_temp_variable = { tmp_num_total_mills = non_damaged_building_level@hydro_aluminium_refinery}
				check_variable = { tmp_num_total_mills > 3 }
			}
		}
		custom_map_icon = GFX_raid_type_icon_aluminium_refinery_raid
		target_icon = GFX_aluminium_refinery_target_icon
		target_loc_key = raid_target_name_aluminium_refinery
		arrow = {
			type = air
		}
		unit_model = {
			type = equipment
		}
		launch_sound = raid_launch_air

		unit_requirements = {
			equipment = {
				type = { medium_plane_airframe large_plane_airframe heavy_large_plane_airframe }
				modules = {
					bomb_920kg_bomb_bay
					bomb_1000kg_bomb_bay
					bomb_1380kg_bomb_bay
					bomb_1400kg_bomb_bay
					bomb_1500kg_bomb_bay
					bomb_1840kg_bomb_bay
					bomb_2000kg_bomb_bay
					bomb_2300kg_bomb_bay
					bomb_2500kg_bomb_bay
					bomb_2760kg_bomb_bay
					bomb_3000kg_bomb_bay
					bomb_3220kg_bomb_bay
					bomb_3680kg_bomb_bay
					bomb_4600kg_bomb_bay
					bomb_5000kg_bomb_bay
					bomb_5520kg_bomb_bay
					bomb_8280kg_bomb_bay
				}
				amount = { min = 300 }
			}
		}

		starting_point = {
			types = { air_base }
		}

		success_factors = {
			success = {
				base = 0.5

				# Raiding unit modifiers
				experience = {
					reference = 1.0
					weight = 0.1
					start_weight = -0.1
				}
				# air_agility = {
				# 	reference = 100.0 # As air unit agility approaches 100 (as defined by the value above), increase chance by this value
				# 	weight = 0.1 # At 0 agility, the modifier will have negative effect.
				# 	start_weight = -0.1 # The modifier will scale linearly, meaning at 50 agility, the modifier will be 0.
				# }
				reliability = {
					reference = 1
					weight = 0.1
					start_weight = -0.1
				}
				air_defence = {
					reference = 100
					weight = 0.05
					start_weight = -0.05
				}
				strategic_bomber = {
					reference = 75
					weight = 0.2
					start_weight = -0.2
				}

				## Actor Modifiers
				air_superiority = {
					reference = 1
					start_reference = 0.5
					weight = 0.25
					start_weight = -0.25
				}

				### Target Modifiers
				anti_air = {
					reference = 10
					weight = -0.5
				}
				interception = {
					reference = 500 # More than 500 fighters won't really make any difference
					weight = -0.25
				}
				radar = {
					weight = -0.1
				}
				intel = {
					weight = 0.3
					start_weight = -0.1
					reference = 100
				}
			}

			critical = {
				base = 0.10
			}
		}

		success_levels = {
			failure = {
				victim_effects = {
					var:target_state = {
						custom_effect_tooltip = raid_failure_tt
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.25
						ratio = yes
					}
					raid_add_unit_experience = 0.05
					var:actor_country = {
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "nuke_entity"
					animation = "attack"
				}
				visual_effect = {
					entity = "raid_failed_entity"
					animation = "attack"
				}
			}
			limited_success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						set_variable = { building_damage_aluminium_refinery_day = non_damaged_building_level@aluminium_refinery } # Get how many buildings in the state
						multiply_variable = { building_damage_aluminium_refinery_day = 0.25 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
						# round_temp_variable = building_damage_aluminium_refinery_day # Round to nearest integer to display number of buildings destroyed to player
						custom_override_tooltip = {
							tooltip = {
								localization_key = raid_damage_buildings_tt
								building = aluminium_refinery
								num = [?building_damage_aluminium_refinery_day]
							}
							meta_effect = {
								text = {
									damage_building = {
										type = aluminium_refinery
										damage = [BUILDING_DAMAGE_META_VAR]
									}
								}
								BUILDING_DAMAGE_META_VAR = "[?building_damage_aluminium_refinery_day]"
							}
						}
						set_temp_variable = { damage_building_hydro_aluminium_refinery_day = non_damaged_building_level@hydro_aluminium_refinery } # Get how many buildings in the state
						multiply_temp_variable = { damage_building_hydro_aluminium_refinery_day = 0.25 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
						# round_temp_variable = damage_building_hydro_aluminium_refinery_day # Round to nearest integer to display number of buildings destroyed to player
						custom_override_tooltip = {
							tooltip = {
								localization_key = raid_damage_buildings_tt
								building = hydro_aluminium_refinery
								num = [?damage_building_hydro_aluminium_refinery_day]
							}
							meta_effect = {
								text = {
									damage_building = {
										type = hydro_aluminium_refinery
										damage = [BUILDING_DAMAGE_META_VAR]
									}
								}
								BUILDING_DAMAGE_META_VAR = "[?damage_building_hydro_aluminium_refinery_day]"
							}
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.15
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.1
					var:actor_country = {
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
			success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						set_variable = { building_damage_aluminium_refinery_day = non_damaged_building_level@aluminium_refinery } # Get how many buildings in the state
						multiply_variable = { building_damage_aluminium_refinery_day = 0.5 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
						# round_temp_variable = building_damage_aluminium_refinery_day # Round to nearest integer to display number of buildings destroyed to player
						custom_override_tooltip = {
							tooltip = {
								localization_key = raid_damage_buildings_tt
								building = aluminium_refinery
								num = [?building_damage_aluminium_refinery_day]
							}
							meta_effect = {
								text = {
									damage_building = {
										type = aluminium_refinery
										damage = [BUILDING_DAMAGE_META_VAR]
									}
								}
								BUILDING_DAMAGE_META_VAR = "[?building_damage_aluminium_refinery_day]"
							}
						}
						set_temp_variable = { damage_building_hydro_aluminium_refinery_day = non_damaged_building_level@hydro_aluminium_refinery } # Get how many buildings in the state
						multiply_temp_variable = { damage_building_hydro_aluminium_refinery_day = 0.5 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
						# round_temp_variable = damage_building_hydro_aluminium_refinery_day # Round to nearest integer to display number of buildings destroyed to player
						custom_override_tooltip = {
							tooltip = {
								localization_key = raid_damage_buildings_tt
								building = hydro_aluminium_refinery
								num = [?damage_building_hydro_aluminium_refinery_day]
							}
							meta_effect = {
								text = {
									damage_building = {
										type = hydro_aluminium_refinery
										damage = [BUILDING_DAMAGE_META_VAR]
									}
								}
								BUILDING_DAMAGE_META_VAR = "[?damage_building_hydro_aluminium_refinery_day]"
							}
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.1
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.2

					var:actor_country = {
						air_experience = 5
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_success_entity"
					animation = "attack"
				}
			}
			critical_success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						set_variable = { building_damage_aluminium_refinery_day = non_damaged_building_level@aluminium_refinery } # Get how many buildings in the state
						multiply_variable = { building_damage_aluminium_refinery_day = 0.75 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
						# round_temp_variable = building_damage_aluminium_refinery_day # Round to nearest integer to display number of buildings destroyed to player
						custom_override_tooltip = {
							tooltip = {
								localization_key = raid_damage_buildings_tt
								building = aluminium_refinery
								num = [?building_damage_aluminium_refinery_day]
							}
							meta_effect = {
								text = {
									damage_building = {
										type = aluminium_refinery
										damage = [BUILDING_DAMAGE_META_VAR]
									}
								}
								BUILDING_DAMAGE_META_VAR = "[?building_damage_aluminium_refinery_day]"
							}
						}
						set_temp_variable = { damage_building_hydro_aluminium_refinery_day = non_damaged_building_level@hydro_aluminium_refinery } # Get how many buildings in the state
						multiply_temp_variable = { damage_building_hydro_aluminium_refinery_day = 0.75 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
						# round_temp_variable = damage_building_hydro_aluminium_refinery_day # Round to nearest integer to display number of buildings destroyed to player
						custom_override_tooltip = {
							tooltip = {
								localization_key = raid_damage_buildings_tt
								building = hydro_aluminium_refinery
								num = [?damage_building_hydro_aluminium_refinery_day]
							}
							meta_effect = {
								text = {
									damage_building = {
										type = hydro_aluminium_refinery
										damage = [BUILDING_DAMAGE_META_VAR]
									}
								}
								BUILDING_DAMAGE_META_VAR = "[?damage_building_hydro_aluminium_refinery_day]"
							}
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.05
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.35

					var:actor_country = {
						air_experience = 10
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_critical_success_entity"
					animation = "attack"
				}
			}
		}
	}
##     ## #### ##       #### ########    ###    ########  ##    ##
###   ###  ##  ##        ##     ##      ## ##   ##     ##  ##  ##
#### ####  ##  ##        ##     ##     ##   ##  ##     ##   ####
## ### ##  ##  ##        ##     ##    ##     ## ########     ##
##     ##  ##  ##        ##     ##    ######### ##   ##      ##
##     ##  ##  ##        ##     ##    ##     ## ##    ##     ##
##     ## #### ######## ####    ##    ##     ## ##     ##    ##
	arms_factory_raid_day = {
		days_to_prepare = 90

		ai_will_do = {
			base = 0
			# base = 1
			# modifier = {
			# 	# Don't target anyone who is not a potential enemy
			# 	factor = 0
			# 	NOT = {
			# 		is_in_array = {
			# 			array = potential_and_current_enemies
			# 			value = FROM  # Target country
			# 		}
			# 	}
			# }
			# modifier = {
			# 	# Don't target anyone who is not a potential enemy
			# 	factor = 0.25
			# 	NOT = {
			# 		has_war_with = FROM
			# 	}
			# }
			# modifier = {
			# 	factor = 3 # Historical
			# 	original_tag = ENG
			# 	has_war_with = GER
			# 	FROM = {
			# 		original_tag = ROM
			# 		is_in_faction_with = GER
			# 	}
			# }
		}

		category = air_raids

		command_power = 5 # command power allocation cost

		allowed = {
			always = yes
		}
		# Raid Type is visible
		visible = {
			has_tech = day_bombing
			OR = {
				is_major = yes
				has_deployed_air_force_size = {
					size > 2999
				}
			}
		}
		# Specific Target is visible
		show_target = {
			has_war_with = FROM
		}

		# Can prepare
		available = {

		}

		# Can launch a raid
		launchable = {
			has_war_with = FROM
			has_fuel > 24999
		}

		target_type = {
			state = {
				non_damaged_building_level = {
					building = arms_factory
					level > 15
				}
			}
		}
		custom_map_icon = GFX_raid_type_icon_arms_factory_raid
		target_icon = GFX_arms_factory_target_icon
		target_loc_key = raid_target_name_arms_factory
		arrow = {
			type = air
		}
		unit_model = {
			type = equipment
		}
		launch_sound = raid_launch_air

		unit_requirements = {
			equipment = {
				type = { medium_plane_airframe large_plane_airframe heavy_large_plane_airframe }
				modules = {
					bomb_920kg_bomb_bay
					bomb_1000kg_bomb_bay
					bomb_1380kg_bomb_bay
					bomb_1400kg_bomb_bay
					bomb_1500kg_bomb_bay
					bomb_1840kg_bomb_bay
					bomb_2000kg_bomb_bay
					bomb_2300kg_bomb_bay
					bomb_2500kg_bomb_bay
					bomb_2760kg_bomb_bay
					bomb_3000kg_bomb_bay
					bomb_3220kg_bomb_bay
					bomb_3680kg_bomb_bay
					bomb_4600kg_bomb_bay
					bomb_5000kg_bomb_bay
					bomb_5520kg_bomb_bay
					bomb_8280kg_bomb_bay
				}
				amount = { min = 300 }
			}
		}

		starting_point = {
			types = { air_base }
		}

		success_factors = {
			success = {
				base = 0.5

				# Raiding unit modifiers
				experience = {
					reference = 1.0
					weight = 0.1
					start_weight = -0.1
				}
				# air_agility = {
				# 	reference = 100.0 # As air unit agility approaches 100 (as defined by the value above), increase chance by this value
				# 	weight = 0.1 # At 0 agility, the modifier will have negative effect.
				# 	start_weight = -0.1 # The modifier will scale linearly, meaning at 50 agility, the modifier will be 0.
				# }
				reliability = {
					reference = 1
					weight = 0.1
					start_weight = -0.1
				}
				air_defence = {
					reference = 100
					weight = 0.05
					start_weight = -0.05
				}
				strategic_bomber = {
					reference = 75
					weight = 0.2
					start_weight = -0.2
				}

				## Actor Modifiers
				air_superiority = {
					reference = 1
					start_reference = 0.5
					weight = 0.25
					start_weight = -0.25
				}

				### Target Modifiers
				anti_air = {
					reference = 10
					weight = -0.5
				}
				interception = {
					reference = 500 # More than 500 fighters won't really make any difference
					weight = -0.25
				}
				radar = {
					weight = -0.1
				}
				intel = {
					weight = 0.3
					start_weight = -0.1
					reference = 100
				}
			}

			critical = {
				base = 0.10
			}
		}

		success_levels = {
			failure = {
				victim_effects = {
					var:target_state = {
						custom_effect_tooltip = raid_failure_tt
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.25
						ratio = yes
					}
					raid_add_unit_experience = 0.05
					var:actor_country = {
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "nuke_entity"
					animation = "attack"
				}
				visual_effect = {
					entity = "raid_failed_entity"
					animation = "attack"
				}
			}
			limited_success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						set_variable = { building_damage_arms_factory_day = non_damaged_building_level@arms_factory } # Get how many buildings in the state
						multiply_variable = { building_damage_arms_factory_day = 0.25 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
						# round_temp_variable = building_damage_arms_factory_day # Round to nearest integer to display number of buildings destroyed to player
						custom_override_tooltip = {
							tooltip = {
								localization_key = raid_damage_buildings_tt
								building = arms_factory
								num = [?building_damage_arms_factory_day]
							}
							meta_effect = {
								text = {
									damage_building = {
										type = arms_factory
										damage = [BUILDING_DAMAGE_META_VAR]
									}
								}
								BUILDING_DAMAGE_META_VAR = "[?building_damage_arms_factory_day]"
							}
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.15
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.1
					var:actor_country = {
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
			success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						set_variable = { building_damage_arms_factory_day = non_damaged_building_level@arms_factory } # Get how many buildings in the state
						multiply_variable = { building_damage_arms_factory_day = 0.5 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
						# round_temp_variable = building_damage_arms_factory_day # Round to nearest integer to display number of buildings destroyed to player
						custom_override_tooltip = {
							tooltip = {
								localization_key = raid_damage_buildings_tt
								building = arms_factory
								num = [?building_damage_arms_factory_day]
							}
							meta_effect = {
								text = {
									damage_building = {
										type = arms_factory
										damage = [BUILDING_DAMAGE_META_VAR]
									}
								}
								BUILDING_DAMAGE_META_VAR = "[?building_damage_arms_factory_day]"
							}
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.1
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.2

					var:actor_country = {
						air_experience = 5
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_success_entity"
					animation = "attack"
				}
			}
			critical_success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						set_variable = { building_damage_arms_factory_day = non_damaged_building_level@arms_factory } # Get how many buildings in the state
						multiply_variable = { building_damage_arms_factory_day = 0.75 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
						# round_temp_variable = building_damage_arms_factory_day # Round to nearest integer to display number of buildings destroyed to player
						custom_override_tooltip = {
							tooltip = {
								localization_key = raid_damage_buildings_tt
								building = arms_factory
								num = [?building_damage_arms_factory_day]
							}
							meta_effect = {
								text = {
									damage_building = {
										type = arms_factory
										damage = [BUILDING_DAMAGE_META_VAR]
									}
								}
								BUILDING_DAMAGE_META_VAR = "[?building_damage_arms_factory_day]"
							}
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.05
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.35

					var:actor_country = {
						air_experience = 10
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_critical_success_entity"
					animation = "attack"
				}
			}
		}
	}
########   #######   ######  ##    ## ##    ##    ###    ########  ########
##     ## ##     ## ##    ## ##   ##   ##  ##    ## ##   ##     ## ##     ##
##     ## ##     ## ##       ##  ##     ####    ##   ##  ##     ## ##     ##
##     ## ##     ## ##       #####       ##    ##     ## ########  ##     ##
##     ## ##     ## ##       ##  ##      ##    ######### ##   ##   ##     ##
##     ## ##     ## ##    ## ##   ##     ##    ##     ## ##    ##  ##     ##
########   #######   ######  ##    ##    ##    ##     ## ##     ## ########
	dockyard_raid_day = {
		days_to_prepare = 90

		ai_will_do = {
			base = 0
			# base = 1
			# modifier = {
			# 	# Don't target anyone who is not a potential enemy
			# 	factor = 0
			# 	NOT = {
			# 		is_in_array = {
			# 			array = potential_and_current_enemies
			# 			value = FROM  # Target country
			# 		}
			# 	}
			# }
			# modifier = {
			# 	# Don't target anyone who is not a potential enemy
			# 	factor = 0.25
			# 	NOT = {
			# 		has_war_with = FROM
			# 	}
			# }
			# modifier = {
			# 	factor = 3 # Historical
			# 	original_tag = ENG
			# 	has_war_with = GER
			# 	FROM = {
			# 		original_tag = ROM
			# 		is_in_faction_with = GER
			# 	}
			# }
		}

		category = air_raids

		command_power = 5 # command power allocation cost

		allowed = {
			always = yes
		}
		# Raid Type is visible
		visible = {
			has_tech = day_bombing
			OR = {
				is_major = yes
				has_deployed_air_force_size = {
					size > 2999
				}
			}
		}
		# Specific Target is visible
		show_target = {
			has_war_with = FROM
		}

		# Can prepare
		available = {

		}

		# Can launch a raid
		launchable = {
			has_war_with = FROM
			has_fuel > 24999
		}

		target_type = {
			state = {
				non_damaged_building_level = {
					building = dockyard
					level > 3
				}
			}
		}
		custom_map_icon = GFX_raid_type_icon_dockyard_raid
		target_icon = GFX_dockyard_target_icon
		target_loc_key = raid_target_name_dockyard
		arrow = {
			type = air
		}
		unit_model = {
			type = equipment
		}
		launch_sound = raid_launch_air

		unit_requirements = {
			equipment = {
				type = { medium_plane_airframe large_plane_airframe heavy_large_plane_airframe }
				modules = {
					bomb_920kg_bomb_bay
					bomb_1000kg_bomb_bay
					bomb_1380kg_bomb_bay
					bomb_1400kg_bomb_bay
					bomb_1500kg_bomb_bay
					bomb_1840kg_bomb_bay
					bomb_2000kg_bomb_bay
					bomb_2300kg_bomb_bay
					bomb_2500kg_bomb_bay
					bomb_2760kg_bomb_bay
					bomb_3000kg_bomb_bay
					bomb_3220kg_bomb_bay
					bomb_3680kg_bomb_bay
					bomb_4600kg_bomb_bay
					bomb_5000kg_bomb_bay
					bomb_5520kg_bomb_bay
					bomb_8280kg_bomb_bay
				}
				amount = { min = 300 }
			}
		}

		starting_point = {
			types = { air_base }
		}

		success_factors = {
			success = {
				base = 0.5

				# Raiding unit modifiers
				experience = {
					reference = 1.0
					weight = 0.1
					start_weight = -0.1
				}
				# air_agility = {
				# 	reference = 100.0 # As air unit agility approaches 100 (as defined by the value above), increase chance by this value
				# 	weight = 0.1 # At 0 agility, the modifier will have negative effect.
				# 	start_weight = -0.1 # The modifier will scale linearly, meaning at 50 agility, the modifier will be 0.
				# }
				reliability = {
					reference = 1
					weight = 0.1
					start_weight = -0.1
				}
				air_defence = {
					reference = 100
					weight = 0.05
					start_weight = -0.05
				}
				strategic_bomber = {
					reference = 75
					weight = 0.2
					start_weight = -0.2
				}

				## Actor Modifiers
				air_superiority = {
					reference = 1
					start_reference = 0.5
					weight = 0.25
					start_weight = -0.25
				}

				### Target Modifiers
				anti_air = {
					reference = 10
					weight = -0.5
				}
				interception = {
					reference = 500 # More than 500 fighters won't really make any difference
					weight = -0.25
				}
				radar = {
					weight = -0.1
				}
				intel = {
					weight = 0.3
					start_weight = -0.1
					reference = 100
				}
			}

			critical = {
				base = 0.10
			}
		}

		success_levels = {
			failure = {
				victim_effects = {
					var:target_state = {
						custom_effect_tooltip = raid_failure_tt
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.25
						ratio = yes
					}
					raid_add_unit_experience = 0.05
					var:actor_country = {
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "nuke_entity"
					animation = "attack"
				}
				visual_effect = {
					entity = "raid_failed_entity"
					animation = "attack"
				}
			}
			limited_success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						set_variable = { building_damage_dockyard_day = non_damaged_building_level@dockyard } # Get how many buildings in the state
						multiply_variable = { building_damage_dockyard_day = 0.25 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
						# round_temp_variable = building_damage_dockyard_day # Round to nearest integer to display number of buildings destroyed to player
						custom_override_tooltip = {
							tooltip = {
								localization_key = raid_damage_buildings_tt
								building = dockyard
								num = [?building_damage_dockyard_day]
							}
							meta_effect = {
								text = {
									damage_building = {
										type = dockyard
										damage = [BUILDING_DAMAGE_META_VAR]
									}
								}
								BUILDING_DAMAGE_META_VAR = "[?building_damage_dockyard_day]"
							}
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.15
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.1
					var:actor_country = {
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
			success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						set_variable = { building_damage_dockyard_day = non_damaged_building_level@dockyard } # Get how many buildings in the state
						multiply_variable = { building_damage_dockyard_day = 0.5 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
						# round_temp_variable = building_damage_dockyard_day # Round to nearest integer to display number of buildings destroyed to player
						custom_override_tooltip = {
							tooltip = {
								localization_key = raid_damage_buildings_tt
								building = dockyard
								num = [?building_damage_dockyard_day]
							}
							meta_effect = {
								text = {
									damage_building = {
										type = dockyard
										damage = [BUILDING_DAMAGE_META_VAR]
									}
								}
								BUILDING_DAMAGE_META_VAR = "[?building_damage_dockyard_day]"
							}
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.1
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.2

					var:actor_country = {
						air_experience = 5
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_success_entity"
					animation = "attack"
				}
			}
			critical_success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						set_variable = { building_damage_dockyard_day = non_damaged_building_level@dockyard } # Get how many buildings in the state
						multiply_variable = { building_damage_dockyard_day = 0.75 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
						# round_temp_variable = building_damage_dockyard_day # Round to nearest integer to display number of buildings destroyed to player
						custom_override_tooltip = {
							tooltip = {
								localization_key = raid_damage_buildings_tt
								building = dockyard
								num = [?building_damage_dockyard_day]
							}
							meta_effect = {
								text = {
									damage_building = {
										type = dockyard
										damage = [BUILDING_DAMAGE_META_VAR]
									}
								}
								BUILDING_DAMAGE_META_VAR = "[?building_damage_dockyard_day]"
							}
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.05
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.35

					var:actor_country = {
						air_experience = 10
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_critical_success_entity"
					animation = "attack"
				}
			}
		}
	}
 ######  #### ##     ## #### ##       ####    ###    ##    ##
##    ##  ##  ##     ##  ##  ##        ##    ## ##   ###   ##
##        ##  ##     ##  ##  ##        ##   ##   ##  ####  ##
##        ##  ##     ##  ##  ##        ##  ##     ## ## ## ##
##        ##   ##   ##   ##  ##        ##  ######### ##  ####
##    ##  ##    ## ##    ##  ##        ##  ##     ## ##   ###
 ######  ####    ###    #### ######## #### ##     ## ##    ##
	industrial_complex_raid_day = {
		days_to_prepare = 90

		ai_will_do = {
			base = 0
			# base = 1
			# modifier = {
			# 	# Don't target anyone who is not a potential enemy
			# 	factor = 0
			# 	NOT = {
			# 		is_in_array = {
			# 			array = potential_and_current_enemies
			# 			value = FROM  # Target country
			# 		}
			# 	}
			# }
			# modifier = {
			# 	# Don't target anyone who is not a potential enemy
			# 	factor = 0.25
			# 	NOT = {
			# 		has_war_with = FROM
			# 	}
			# }
			# modifier = {
			# 	factor = 3 # Historical
			# 	original_tag = ENG
			# 	has_war_with = GER
			# 	FROM = {
			# 		original_tag = ROM
			# 		is_in_faction_with = GER
			# 	}
			# }
		}

		category = air_raids

		command_power = 5 # command power allocation cost

		allowed = {
			always = yes
		}
		# Raid Type is visible
		visible = {
			has_tech = day_bombing
			OR = {
				is_major = yes
				has_deployed_air_force_size = {
					size > 2999
				}
			}
		}
		# Specific Target is visible
		show_target = {
			has_war_with = FROM
		}

		# Can prepare
		available = {

		}

		# Can launch a raid
		launchable = {
			has_war_with = FROM
			has_fuel > 24999
		}

		target_type = {
			state = {
				non_damaged_building_level = {
					building = industrial_complex
					level > 15
				}
			}
		}
		custom_map_icon = GFX_raid_type_icon_industrial_complex_raid
		target_icon = GFX_industrial_complex_target_icon
		target_loc_key = raid_target_name_industrial_complex
		arrow = {
			type = air
		}
		unit_model = {
			type = equipment
		}
		launch_sound = raid_launch_air

		unit_requirements = {
			equipment = {
				type = { medium_plane_airframe large_plane_airframe heavy_large_plane_airframe }
				modules = {
					bomb_920kg_bomb_bay
					bomb_1000kg_bomb_bay
					bomb_1380kg_bomb_bay
					bomb_1400kg_bomb_bay
					bomb_1500kg_bomb_bay
					bomb_1840kg_bomb_bay
					bomb_2000kg_bomb_bay
					bomb_2300kg_bomb_bay
					bomb_2500kg_bomb_bay
					bomb_2760kg_bomb_bay
					bomb_3000kg_bomb_bay
					bomb_3220kg_bomb_bay
					bomb_3680kg_bomb_bay
					bomb_4600kg_bomb_bay
					bomb_5000kg_bomb_bay
					bomb_5520kg_bomb_bay
					bomb_8280kg_bomb_bay
				}
				amount = { min = 300 }
			}
		}
		starting_point = {
			types = { air_base }
		}

		success_factors = {
			success = {
				base = 0.5

				# Raiding unit modifiers
				experience = {
					reference = 1.0
					weight = 0.1
					start_weight = -0.1
				}
				# air_agility = {
				# 	reference = 100.0 # As air unit agility approaches 100 (as defined by the value above), increase chance by this value
				# 	weight = 0.1 # At 0 agility, the modifier will have negative effect.
				# 	start_weight = -0.1 # The modifier will scale linearly, meaning at 50 agility, the modifier will be 0.
				# }
				reliability = {
					reference = 1
					weight = 0.1
					start_weight = -0.1
				}
				air_defence = {
					reference = 100
					weight = 0.05
					start_weight = -0.05
				}
				strategic_bomber = {
					reference = 75
					weight = 0.2
					start_weight = -0.2
				}

				## Actor Modifiers
				air_superiority = {
					reference = 1
					start_reference = 0.5
					weight = 0.25
					start_weight = -0.25
				}

				### Target Modifiers
				anti_air = {
					reference = 10
					weight = -0.5
				}
				interception = {
					reference = 500 # More than 500 fighters won't really make any difference
					weight = -0.25
				}
				radar = {
					weight = -0.1
				}
				intel = {
					weight = 0.3
					start_weight = -0.1
					reference = 100
				}
			}

			critical = {
				base = 0.10
			}
		}

		success_levels = {
			failure = {
				victim_effects = {
					var:target_state = {
						custom_effect_tooltip = raid_failure_tt
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.25
						ratio = yes
					}
					raid_add_unit_experience = 0.05
					var:actor_country = {
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "nuke_entity"
					animation = "attack"
				}
				visual_effect = {
					entity = "raid_failed_entity"
					animation = "attack"
				}
			}
			limited_success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						set_variable = { building_damage_industrial_complex_day = non_damaged_building_level@industrial_complex } # Get how many buildings in the state
						multiply_variable = { building_damage_industrial_complex_day = 0.10 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
						# round_temp_variable = building_damage_industrial_complex_day # Round to nearest integer to display number of buildings destroyed to player
						custom_override_tooltip = {
							tooltip = {
								localization_key = raid_damage_buildings_tt
								building = industrial_complex
								num = [?building_damage_industrial_complex_day]
							}
							meta_effect = {
								text = {
									damage_building = {
										type = industrial_complex
										damage = [BUILDING_DAMAGE_META_VAR]
									}
								}
								BUILDING_DAMAGE_META_VAR = "[?building_damage_industrial_complex_day]"
							}
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.15
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.1
					var:actor_country = {
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
			success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						set_variable = { building_damage_industrial_complex_day = non_damaged_building_level@industrial_complex } # Get how many buildings in the state
						multiply_variable = { building_damage_industrial_complex_day = 0.20 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
						# round_temp_variable = building_damage_industrial_complex_day # Round to nearest integer to display number of buildings destroyed to player
						custom_override_tooltip = {
							tooltip = {
								localization_key = raid_damage_buildings_tt
								building = industrial_complex
								num = [?building_damage_industrial_complex_day]
							}
							meta_effect = {
								text = {
									damage_building = {
										type = industrial_complex
										damage = [BUILDING_DAMAGE_META_VAR]
									}
								}
								BUILDING_DAMAGE_META_VAR = "[?building_damage_industrial_complex_day]"
							}
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.1
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.2

					var:actor_country = {
						air_experience = 5
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_success_entity"
					animation = "attack"
				}
			}
			critical_success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						set_variable = { building_damage_industrial_complex_day = non_damaged_building_level@industrial_complex } # Get how many buildings in the state
						multiply_variable = { building_damage_industrial_complex_day = 0.30 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
						# round_temp_variable = building_damage_industrial_complex_day # Round to nearest integer to display number of buildings destroyed to player
						custom_override_tooltip = {
							tooltip = {
								localization_key = raid_damage_buildings_tt
								building = industrial_complex
								num = [?building_damage_industrial_complex_day]
							}
							meta_effect = {
								text = {
									damage_building = {
										type = industrial_complex
										damage = [BUILDING_DAMAGE_META_VAR]
									}
								}
								BUILDING_DAMAGE_META_VAR = "[?building_damage_industrial_complex_day]"
							}
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.05
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.35

					var:actor_country = {
						air_experience = 10
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_critical_success_entity"
					animation = "attack"
				}
			}
		}
	}
   ###    #### ########  ########     ###     ######  ########
  ## ##    ##  ##     ## ##     ##   ## ##   ##    ## ##
 ##   ##   ##  ##     ## ##     ##  ##   ##  ##       ##
##     ##  ##  ########  ########  ##     ##  ######  ######
#########  ##  ##   ##   ##     ## #########       ## ##
##     ##  ##  ##    ##  ##     ## ##     ## ##    ## ##
##     ## #### ##     ## ########  ##     ##  ######  ########
	air_base_raid_day = {
		days_to_prepare = 90

		ai_will_do = {
			base = 0
			# base = 1
			# modifier = {
			# 	# Don't target anyone who is not a potential enemy
			# 	factor = 0
			# 	NOT = {
			# 		is_in_array = {
			# 			array = potential_and_current_enemies
			# 			value = FROM  # Target country
			# 		}
			# 	}
			# }
			# modifier = {
			# 	# Don't target anyone who is not a potential enemy
			# 	factor = 0.25
			# 	NOT = {
			# 		has_war_with = FROM
			# 	}
			# }
			# modifier = {
			# 	factor = 3 # Historical
			# 	original_tag = ENG
			# 	has_war_with = GER
			# 	FROM = {
			# 		original_tag = ROM
			# 		is_in_faction_with = GER
			# 	}
			# }
		}

		category = air_raids

		command_power = 5 # command power allocation cost

		allowed = {
			always = yes
		}
		# Raid Type is visible
		visible = {
			has_tech = day_bombing
			OR = {
				is_major = yes
				has_deployed_air_force_size = {
					size > 2999
				}
			}
		}
		# Specific Target is visible
		show_target = {
			has_war_with = FROM
		}

		# Can prepare
		available = {

		}

		# Can launch a raid
		launchable = {
			has_war_with = FROM
			has_fuel > 24999
		}

		target_type = {
			state = {
				non_damaged_building_level = {
					building = air_base
					level > 7
				}
			}
		}
		custom_map_icon = GFX_raid_type_icon_air_base_raid
		target_icon = GFX_air_base_target_icon
		target_loc_key = raid_target_name_air_base
		arrow = {
			type = air
		}
		unit_model = {
			type = equipment
		}
		launch_sound = raid_launch_air

		unit_requirements = {
			equipment = {
				type = { medium_plane_airframe large_plane_airframe heavy_large_plane_airframe }
				modules = {
					bomb_920kg_bomb_bay
					bomb_1000kg_bomb_bay
					bomb_1380kg_bomb_bay
					bomb_1400kg_bomb_bay
					bomb_1500kg_bomb_bay
					bomb_1840kg_bomb_bay
					bomb_2000kg_bomb_bay
					bomb_2300kg_bomb_bay
					bomb_2500kg_bomb_bay
					bomb_2760kg_bomb_bay
					bomb_3000kg_bomb_bay
					bomb_3220kg_bomb_bay
					bomb_3680kg_bomb_bay
					bomb_4600kg_bomb_bay
					bomb_5000kg_bomb_bay
					bomb_5520kg_bomb_bay
					bomb_8280kg_bomb_bay
				}
				amount = { min = 300 }
			}
		}
		starting_point = {
			types = { air_base }
		}

		success_factors = {
			success = {
				base = 0.4

				# Raiding unit modifiers
				experience = {
					reference = 1.0
					weight = 0.1
					start_weight = -0.1
				}
				# air_agility = {
				# 	reference = 100.0 # As air unit agility approaches 100 (as defined by the value above), increase chance by this value
				# 	weight = 0.1 # At 0 agility, the modifier will have negative effect.
				# 	start_weight = -0.1 # The modifier will scale linearly, meaning at 50 agility, the modifier will be 0.
				# }
				reliability = {
					reference = 1
					weight = 0.1
					start_weight = -0.1
				}
				air_defence = {
					reference = 100
					weight = 0.05
					start_weight = -0.05
				}
				strategic_bomber = {
					reference = 75
					weight = 0.2
					start_weight = -0.2
				}

				## Actor Modifiers
				air_superiority = {
					reference = 1
					start_reference = 0.5
					weight = 0.25
					start_weight = -0.25
				}

				### Target Modifiers
				anti_air = {
					reference = 10
					weight = -0.5
				}
				interception = {
					reference = 500 # More than 500 fighters won't really make any difference
					weight = -0.3
				}
				radar = {
					weight = -0.1
				}
				intel = {
					weight = 0.3
					start_weight = -0.1
					reference = 100
				}
			}

			critical = {
				base = 0.10
			}
		}

		success_levels = {
			failure = {
				victim_effects = {
					var:target_state = {
						custom_effect_tooltip = raid_failure_tt
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.3
						ratio = yes
					}
					raid_add_unit_experience = 0.05
					var:actor_country = {
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "nuke_entity"
					animation = "attack"
				}
				visual_effect = {
					entity = "raid_failed_entity"
					animation = "attack"
				}
			}
			limited_success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						set_variable = { building_damage_air_base_day = non_damaged_building_level@air_base } # Get how many buildings in the state
						multiply_variable = { building_damage_air_base_day = 0.1875 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
						# round_temp_variable = building_damage_air_base_day # Round to nearest integer to display number of buildings destroyed to player
						custom_override_tooltip = {
							tooltip = {
								localization_key = raid_damage_buildings_tt
								building = air_base
								num = [?building_damage_air_base_day]
							}
							meta_effect = {
								text = {
									damage_building = {
										type = air_base
										damage = [BUILDING_DAMAGE_META_VAR]
									}
								}
								BUILDING_DAMAGE_META_VAR = "[?building_damage_air_base_day]"
							}
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.2
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.1
					var:actor_country = {
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
			success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						set_variable = { building_damage_air_base_day = non_damaged_building_level@air_base } # Get how many buildings in the state
						multiply_variable = { building_damage_air_base_day = 0.375 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
						# round_temp_variable = building_damage_air_base_day # Round to nearest integer to display number of buildings destroyed to player
						custom_override_tooltip = {
							tooltip = {
								localization_key = raid_damage_buildings_tt
								building = air_base
								num = [?building_damage_air_base_day]
							}
							meta_effect = {
								text = {
									damage_building = {
										type = air_base
										damage = [BUILDING_DAMAGE_META_VAR]
									}
								}
								BUILDING_DAMAGE_META_VAR = "[?building_damage_air_base_day]"
							}
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.15
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.2

					var:actor_country = {
						air_experience = 5
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_success_entity"
					animation = "attack"
				}
			}
			critical_success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						set_variable = { building_damage_air_base_day = non_damaged_building_level@air_base } # Get how many buildings in the state
						multiply_variable = { building_damage_air_base_day = 0.5625 } # Multiply by ratio of how many destroyed (e.g. 25% destroyed)
						# round_temp_variable = building_damage_air_base_day # Round to nearest integer to display number of buildings destroyed to player
						custom_override_tooltip = {
							tooltip = {
								localization_key = raid_damage_buildings_tt
								building = air_base
								num = [?building_damage_air_base_day]
							}
							meta_effect = {
								text = {
									damage_building = {
										type = air_base
										damage = [BUILDING_DAMAGE_META_VAR]
									}
								}
								BUILDING_DAMAGE_META_VAR = "[?building_damage_air_base_day]"
							}
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.1
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.35

					var:actor_country = {
						air_experience = 10
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_critical_success_entity"
					animation = "attack"
				}
			}
		}
	}
 ######     ###    ##    ##    ###    ##
##    ##   ## ##   ###   ##   ## ##   ##
##        ##   ##  ####  ##  ##   ##  ##
##       ##     ## ## ## ## ##     ## ##
##       ######### ##  #### ######### ##
##    ## ##     ## ##   ### ##     ## ##
 ######  ##     ## ##    ## ##     ## ########
	lock_bombing_raid = {
		days_to_prepare = 90

		category = air_raids

		command_power = 20 # command power allocation cost

		ai_will_do = {
			base = 1
		}

		allowed = {
			has_dlc = "Gotterdammerung"
		}
		# Raid Type is visible
		visible = {
			OR = {
				has_tech = day_bombing
				has_tech = night_bombing
			}
			OR = {
				is_major = yes
				has_deployed_air_force_size = {
					size > 2999
				}
			}
		}
		# Specific Target is visible
		show_target = {
			has_war_with = FROM
		}

		# Can prepare
		available = {

		}

		# Can launch a raid
		launchable = {
			has_war_with = FROM
			has_fuel > 24999
		}

		target_type = {
			building = {
				tags = locks_building
			}
		}
		target_icon = GFX_canal_icon
		launch_sound = raid_launch_air

		arrow = {
			type = air
		}
		unit_model = {
			type = equipment
		}

		unit_requirements = {
			equipment = {
				type = { medium_plane_airframe large_plane_airframe heavy_large_plane_airframe }
				modules = {
					bomb_920kg_bomb_bay
					bomb_1000kg_bomb_bay
					bomb_1380kg_bomb_bay
					bomb_1400kg_bomb_bay
					bomb_1500kg_bomb_bay
					bomb_1840kg_bomb_bay
					bomb_2000kg_bomb_bay
					bomb_2300kg_bomb_bay
					bomb_2500kg_bomb_bay
					bomb_2760kg_bomb_bay
					bomb_3000kg_bomb_bay
					bomb_3220kg_bomb_bay
					bomb_3680kg_bomb_bay
					bomb_4600kg_bomb_bay
					bomb_5000kg_bomb_bay
					bomb_5520kg_bomb_bay
					bomb_8280kg_bomb_bay
				}
				amount = { min = 300 }
			}
		}

		starting_point = {
			types = { air_base }
		}

		success_factors = {
			success = {
				base = 0.4

				# Raiding unit modifiers
				experience = {
					reference = 1.0
					weight = 0.1
					start_weight = -0.1
				}
				# air_agility = {
				# 	reference = 100.0 # As air unit agility approaches 100 (as defined by the value above), increase chance by this value
				# 	weight = 0.1 # At 0 agility, the modifier will have negative effect.
				# 	start_weight = -0.1 # The modifier will scale linearly, meaning at 50 agility, the modifier will be 0.
				# }
				reliability = {
					reference = 1
					weight = 0.1
					start_weight = -0.1
				}
				air_defence = {
					reference = 100
					weight = 0.05
					start_weight = -0.05
				}
				strategic_bomber = {
					reference = 75
					weight = 0.2
					start_weight = -0.2
				}

				## Actor Modifiers
				air_superiority = {
					reference = 1
					start_reference = 0.5
					weight = 0.25
					start_weight = -0.25
				}

				### Target Modifiers
				anti_air = {
					reference = 10
					weight = -0.5
				}
				interception = {
					reference = 500 # More than 500 fighters won't really make any difference
					weight = -0.25
				}
				radar = {
					weight = -0.1
				}
				intel = {
					weight = 0.3
					start_weight = -0.1
					reference = 100
				}
			}

			critical = {
				base = 0.10
			}
		}
		success_levels = {
			failure = {
				victim_effects = {
					var:target_state = {
						custom_effect_tooltip = raid_failure_tt
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.25
						ratio = yes
					}
					raid_add_unit_experience = 0.05
					var:actor_country = {
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "nuke_entity"
					animation = "attack"
				}
				visual_effect = {
					entity = "raid_failed_entity"
					animation = "attack"
				}
			}
			limited_success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						damage_building = {
							tags = locks_building
							damage = 0.33 # levels of damage
							province = var:ROOT.target_province
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.15
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.1
					var:actor_country = {
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_limited_success_entity"
					animation = "attack"
				}
			}
			success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						damage_building = {
							tags = locks_building
							damage = 0.66 # levels of damage
							province = var:ROOT.target_province
							repair_speed_modifier = -0.35
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.1
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.2

					var:actor_country = {
						air_experience = 5
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_success_entity"
					animation = "attack"
				}
			}
			critical_success = {
				victim_effects = {
					# Damage to Target
					var:target_state = {
						damage_building = {
							tags = locks_building
							damage = 1 # levels of damage
							province = var:ROOT.target_province
							repair_speed_modifier = -0.55
						}
					}
				}
				actor_effects = {
					# Damage to raiding units
					raid_damage_units = {
						plane_loss = 0.05
						ratio = yes
					}

					# XP etc
					raid_add_unit_experience = 0.35

					var:actor_country = {
						air_experience = 10
						add_fuel = -25000
					}
				}
				visual_effect = {
					entity = "air_raids_2_critical_success_entity"
					animation = "attack"
				}
			}
		}
	}
}