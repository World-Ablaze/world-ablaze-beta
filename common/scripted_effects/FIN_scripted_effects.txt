

FIN_kallio_becomes_country_leader = {
	retire_country_leader = yes
	effect_tooltip = { #Kyosti Kallio will automatically be the next in line after Svinhufvud, so this is just for tooltip purposes
		promote_character = FIN_kyosti_kallio
	}
	#Set Maalaisliitto (Agrarian League) as Non-Aligned party
	set_party_name = {
		ideology = democratic
		name = FIN_neutrality_party
		long_name = FIN_neutrality_party_long
	}
}

FIN_ryti_becomes_country_leader = {
	retire_country_leader = yes
	effect_tooltip = { #Risto Ryti will automatically be the next in line after Kallio, so this is just for tooltip purposes
		promote_character = FIN_risto_heikki_ryti
	}
	#Set National Progressive Party as Non-Aligned party
	set_party_name = {
		ideology = democratic
		name = FIN_neutrality_party_progressive
		long_name = FIN_neutrality_party_progressive_long
	}
}

FIN_paasikivi_becomes_country_leader = {
	if = {
		limit = {
			has_country_leader = {
				ruling_only = yes
				character = FIN_risto_heikki_ryti
			}
		}
		retire_country_leader = yes
	}
	else_if = {
		limit = {
			has_country_leader = {
				ruling_only = yes
				character = FIN_carl_mannerheim
			}
		}
		remove_country_leader_role = { #Removing country role on Mannerheim (instead of retiring) since he should still be a military guy.
			character = FIN_carl_mannerheim
			ideology = conservatism
		}
	}

	#Paasikivi should usually be the next in line after Ryti or Mannerheim, but just in case due to Mannerheim intereference
	promote_character = FIN_juho_kusti_paasikivi

	#Set Kokoomus as Non-Aligned party
	set_party_name = {
		ideology = democratic
		name = FIN_neutrality_party_kokoomus
		long_name = FIN_neutrality_party_kokoomus_long
	}
}

FIN_mannerheim_becomes_country_leader = {
	#In this case we do want to keep the political leaders (Ryti or Paasikivi)
	add_country_leader_role = {
		character = FIN_carl_mannerheim
		country_leader = {
			ideology = conservatism
			expire = "1965.1.1.1"
			traits = {
				sotamarsalkka
			}
		}
		promote_leader = yes
	}
	#Set National Progressive Party as Non-Aligned party
	set_party_name = {
		ideology = democratic
		name = FIN_neutrality_party_military
		long_name = FIN_neutrality_party_military_long
	}
}

### OPERATIVES
FIN_create_operative_hella_wuolijok = { # Focus The Red Watch & Focus Trade Agreements
	create_operative_leader = {
		name = "Hella Wuolijok"
		GFX = GFX_portrait_FIN_hella_wuolijok
		traits = { operative_well_groomed operative_escape_artist }
		bypass_recruitment = no
		available_to_spy_master = yes
		nationalities = { FIN EST }
	}
}

FIN_create_operative_vilho_pentikainen = { # Focus The Red Watch
	create_operative_leader = {
		name = "Vilho Pentikäinen"
		GFX = GFX_portrait_FIN_vilho_pentikainen
		traits = { operative_safe_cracker operative_master_interrogator }
		bypass_recruitment = no
		available_to_spy_master = yes
		nationalities = { FIN SOV }
	}
}

FIN_seize_weapon_caches = { #Used on the state scope
	remove_dynamic_modifier = { modifier = FIN_weapon_caches_modifier }
	ROOT = {
		random_list = {
			#log = yes
			25 = {
				add_equipment_to_stockpile = {
					type = infantry_equipment
					amount = 15
					producer = FIN
				}
			}
			25 = {
				add_equipment_to_stockpile = {
					type = infantry_equipment
					amount = 35
					producer = FIN
				}
			}
			25 = {
				add_equipment_to_stockpile = {
					type = infantry_equipment
					amount = 50
					producer = FIN
				}
			}
			25 = {
				add_equipment_to_stockpile = {
					type = infantry_equipment
					amount = 65
					producer = FIN
				}
				add_equipment_to_stockpile = {
					type = support_equipment
					amount = 35
					producer = FIN
				}
			}
		}
	}
}

### WINTER WAR

FIN_winter_war_setup_effect = {
	set_variable = { FIN_winter_war_exhaustion_variable = 0}
	set_variable = { FIN_winter_war_fort_variable = 0.2}
	set_variable = { FIN_winter_war_core_defence_variable = 0}
	set_variable = { FIN_winter_war_attack_variable = 0.2}
	add_dynamic_modifier = { modifier = FIN_winter_war_modifiers }
}

### CONTINUATION WAR

FIN_pact_for_continuation_war_start = { #To be used on FIN's scope - Used immediately upon signing agreement
	FIN = {
		if = {
			limit = {
				NOT = { gives_military_access_to = GER }
			}
			give_military_access = GER
		}
		diplomatic_relation = {
			country = GER
			relation = docking_rights
			active = yes
		}
		if = {
			limit = {
				NOT = { has_non_aggression_pact_with = GER }
			}
			diplomatic_relation = {
				country = GER
				relation = non_aggression_pact
				active = yes
			}
		}
	}
	if = {
		limit = {
			GER = { NOT = { has_guaranteed = FIN } }
		}
		GER = { give_guarantee = FIN }
	}
}

#Change name of States and VPs when appropriate. Expected to be used inside on_state_control_changed. FROM.FROM is state / ROOT is new controller / FROM is former controller
FIN_change_name_of_state_or_vp = {
	IF = { # Petrozavodsk / Äänislinna
		limit = {
			FROM.FROM = {
				state = 216 #OLONETS
			}
		}
		IF = { #FINLAND CONTROLLER
			limit = {
				OR = {
					ROOT = { original_tag = FIN }
					ROOT = { original_tag = KAR }
				}
			}
			set_province_name = { id = 11159 name = VICTORY_POINTS_11159_FIN }
		}
		ELSE_IF = { #OTHER CONTROLLER
			limit = {
				OR = {
					FROM = { original_tag = FIN }
					FROM = { original_tag = KAR }
				}
				ROOT = {
					NOT = {
						OR = {
							original_tag = FIN
							original_tag = KAR
						}
					}
				}
			}
			reset_province_name = 11159
		}
	}
	ELSE_IF = { # MURMANSK / KUOLAN NIEMIMAA // (Murmansk / Muurmanski) (Kandalaksha / Kantalahti)
		limit = {
			FROM.FROM = {
				state = 213 #MURMANSK
			}
		}
		IF = { #FINLAND CONTROLLER
			limit = {
				OR = {
					ROOT = { original_tag = FIN }
					ROOT = { original_tag = KAR }
				}
			}
			FROM.FROM = { set_state_name = STATE_213_FIN }
			set_province_name = { id = 3134 name = VICTORY_POINTS_3134_FIN } #Murmansk
			set_province_name = { id = 6181 name = VICTORY_POINTS_6181_FIN } #Kandalaksha
		}
		ELSE_IF = { #OTHER CONTROLLER
			limit = {
				OR = {
					FROM = { original_tag = FIN }
					FROM = { original_tag = KAR }
				}
				ROOT = {
					NOT = {
						OR = {
							original_tag = FIN
							original_tag = KAR
						}
					}
				}
			}
			FROM.FROM = { reset_state_name = yes }
			reset_province_name = 3134
			reset_province_name = 6181
		}
	}
	ELSE_IF = { # LENINGRAD / PIETARI // (Leningrad / Pietari)
		limit = {
			FROM.FROM = {
				state = 195 #LENINGRAD
			}
		}
		IF = { #FINLAND CONTROLLER
			limit = {
				OR = {
					ROOT = { original_tag = FIN }
					ROOT = { original_tag = KAR }
				}
			}
			FROM.FROM = { set_state_name = STATE_195_FIN }
			set_province_name = { id = 3151 name = VICTORY_POINTS_3151_FIN } #Leningrad
		}
		ELSE_IF = { #OTHER CONTROLLER
			limit = {
				OR = {
					FROM = { original_tag = FIN }
					FROM = { original_tag = KAR }
				}
				ROOT = {
					NOT = {
						OR = {
							original_tag = FIN
							original_tag = KAR
						}
					}
				}
			}
			FROM.FROM = { reset_state_name = yes }
			reset_province_name = 3151
		}
	}
}

###################################
### FINNISH DEMOCRATIC REPUBLIC ###
###################################

FIN_form_finnish_democratic_republic = {
	if = {
		limit = {
			NOT = { has_country_flag = FIN_finish_democratic_republic_formed_flag }
		}
		promote_character = FIN_otto_wille_kuusinen
		set_cosmetic_tag = FIN_finnish_democratic_republic
		random_other_country = {
			limit = {
				original_tag = SOV
				has_country_leader = {
					ruling_only = yes
					character = SOV_iosif_stalin
				}
			}
			add_timed_idea = {
				idea = FIN_finnish_goods
				days = 730
			}
		}
		set_country_flag = FIN_finish_democratic_republic_formed_flag
	}
}


########    ###     ######   ######  ####  ######  ########     ######   #######  ##     ## ########
##         ## ##   ##    ## ##    ##  ##  ##    ##    ##       ##    ## ##     ## ##     ## ##     ##
##        ##   ##  ##       ##        ##  ##          ##       ##       ##     ## ##     ## ##     ##
######   ##     ##  ######  ##        ##   ######     ##       ##       ##     ## ##     ## ########
##       #########       ## ##        ##        ##    ##       ##       ##     ## ##     ## ##
##       ##     ## ##    ## ##    ##  ##  ##    ##    ##       ##    ## ##     ## ##     ## ##
##       ##     ##  ######   ######  ####  ######     ##        ######   #######   #######  ##


FIN_purchase_german_equipment_for_cw = {
	add_equipment_to_stockpile = {
		type = ger_inf_0
		amount = 6000
		producer = GER
	}

	add_equipment_to_stockpile = {
		type = support_equipment
		amount = 600
		producer = GER
	}

	add_equipment_to_stockpile = {
		type = motorized_equipment_1
		amount = 200
		producer = GER
	}

	if = {
		limit = {
			has_dlc = "La Resistance"
		}
		add_equipment_to_stockpile = {
			type = tank_ger_scout_car_chassis_1
			amount = 100
			producer = GER
			variant_name = "Sdkfz 222"
		}
	}

	#if = {
	#	limit = {
	#		has_dlc = "By Blood Alone"
	#	}
	#	if = {
	#		limit = {
	#			NOT = { has_tech = iw_small_airframe }
	#		}
	#		set_technology = {
	#			iw_small_airframe = 1
	#			popup = yes
	#		}
	#	}
	#	create_equipment_variant = { #Copy of I-15 variant in German history file
	#		name = "He 51" #also covers Ar 68
	#		type = small_plane_airframe_0
	#		modules = {
	#			fixed_main_weapon_slot = light_mg_2x
	#			engine_type_slot = engine_1_1x
	#			special_type_slot_1 = empty
	#		}
	#		obsolete = yes
	#		icon = "GFX_GER_early_fighter_medium"
	#		model = "GER_fighter_equipment_0_entity"
	#	}
	#	add_equipment_to_stockpile = {
	#		type = small_plane_airframe_0
	#		amount = 30
	#		producer = GER
	#		variant_name = "He 51"
	#	}
	#}
	#else = {
		add_equipment_to_stockpile = {
			type = ger_fighter_equipment_1
			amount = 30
			producer = GER
		}
	#}
}